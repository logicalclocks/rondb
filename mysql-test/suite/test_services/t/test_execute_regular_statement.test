--source include/no_protocol.inc
--source include/have_debug.inc
--source include/have_debug_sync.inc

INSTALL COMPONENT "file://component_test_execute_regular_statement";

# Executing statements using Regular Statement Interface within UDF is
# restircted.
--error ER_STMT_EXECUTION_NOT_ALLOWED_WITHIN_SP_OR_TRG_OR_UDF
SELECT test_execute_regular_statement("SHOW DATABASES");

# Skip check to restrict statement execution within UDF to test the statement
# execution interface.
SET DEBUG='+d,skip_statement_execution_within_UDF_check';
SELECT test_execute_regular_statement("SHOW DATABASES");

CREATE DATABASE mle_db;
USE mle_db;
CREATE TABLE my_table (col_a VARCHAR(10), col_b VARCHAR(10), col_c INT, col_d DOUBLE);
insert into my_table (col_a, col_b, col_c, col_d) values ("row_1_a", "row_1_b", 11, 1.1);
insert into my_table (col_a, col_b, col_c, col_d) values ("row_2_a", "row_2_b", 12, 1.2);
SELECT * FROM mle_db.my_table;
SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table");

SELECT test_execute_regular_statement("INSERT INTO my_table (col_a, col_b, col_c, col_d) VALUES ('row_3_a', 'row_3_b', 13, 1.3)");

SELECT * FROM mle_db.my_table;
SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table");

SELECT DATABASE();
SELECT test_execute_regular_statement("SELECT DATABASE()");

SELECT test_execute_regular_statement("CREATE TABLE mle_db.my_table2 (id INT NOT NULL AUTO_INCREMENT, col_b VARCHAR(10), col_c INT, col_d DOUBLE, PRIMARY KEY(id));");
SELECT test_execute_regular_statement("insert into my_table2 (col_b, col_c, col_d) values ('row_1_b', 11, 1.1);");
SELECT test_execute_regular_statement("insert into my_table2 (col_b, col_c, col_d) values ('row_2_b', 12, 1.2);");
SELECT test_execute_regular_statement("insert into my_table2 (col_b, col_c, col_d) values ('row_3_b', 13, 1.3);");

SELECT * FROM mle_db.my_table2;

DELIMITER $$;
CREATE PROCEDURE multiple_queries() 
BEGIN
SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table");
SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table2");
END$$
DELIMITER ;$$

CALL multiple_queries();

--echo ###################################### Set/get attribute tests ######################################

SET SESSION DEBUG = '+d,attribute_set';

SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table WHERE col_c = 12");

SET SESSION DEBUG = '-d,attribute_set';

SET SESSION DEBUG = '+d,attribute_get';

SELECT test_execute_regular_statement("SELECT * FROM mle_db.my_table WHERE col_c = 12");

SET SESSION DEBUG = '-d,attribute_get';

SELECT test_execute_regular_statement("DROP PROCEDURE multiple_queries;");
SELECT test_execute_regular_statement("DROP TABLE my_table;");
SELECT test_execute_regular_statement("DROP TABLE my_table2;");
SELECT test_execute_regular_statement("DROP DATABASE mle_db;");

SET DEBUG='-d,skip_statement_execution_within_UDF_check';
UNINSTALL COMPONENT "file://component_test_execute_regular_statement";
