include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Install clone plugin on server1.
#    Commit some data and then purge all binary logs.
#    Bootstrap a group on server1.
[connection server1]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);
SET sql_log_bin = 0;
include/gtid_utils.inc
SET sql_log_bin = 1;
FLUSH BINARY LOGS;
PURGE BINARY LOGS TO 'CURRENT_BINLOG_FILE';
include/assert.inc [GTID_PURGED must be equal to GTID_EXECUTED]
include/start_and_bootstrap_group_replication.inc

############################################################
# 2. Install clone plugin on server2.
#    Start GR, cloning is the option chosen as recovery
#    from binary logs is not possible.
#    Add debug point for clone to fail, the joiner will error out.
[connection server2]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';
SET @@GLOBAL.DEBUG='+d,gr_run_clone_query_fail_once';
SET GLOBAL group_replication_group_name= "GROUP_REPLICATION_GROUP_NAME";
START GROUP_REPLICATION;
SET DEBUG_SYNC = "now WAIT_FOR signal.run_clone_query_waiting";
SET DEBUG_SYNC = "now SIGNAL signal.run_clone_query_continue";
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc

############################################################
# 3. Cleanup.
[connection server1]
DROP TABLE t1;
include/gtid_utils_end.inc
UNINSTALL PLUGIN clone;
[connection server2]
SET DEBUG_SYNC= 'RESET';
SET @@GLOBAL.DEBUG='-d,gr_run_clone_query_fail_once';
UNINSTALL PLUGIN clone;
SET SESSION sql_log_bin=0;
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("This member will start distributed recovery using clone. It is due to no ONLINE member has the missing data for recovering in its binary logs.");
call mtr.add_suppression("Due to a critical cloning error or lack of donors, distributed recovery cannot be executed. The member will now leave the group.");
SET SESSION sql_log_bin=1;
include/group_replication_end.inc
