include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]

# Bootstrap start GR on M1 and test commands for recovery channel
# when MEMBER_STATE: ONLINE and recovery channel is ABSENT
[connection server1]
set session sql_log_bin=0;
call mtr.add_suppression("Replica channel 'group_replication_recovery' does not exist.*");
set session sql_log_bin=1;
include/start_and_bootstrap_group_replication.inc

# CRS for 'group_replication_recovery' channel won't accept parameters other than
# Source_User and SOURCE_PASSWORD
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", SOURCE_PORT=10 FOR CHANNEL "group_replication_recovery";
ERROR HY000: CHANGE REPLICATION SOURCE with the given parameters cannot be performed on channel 'group_replication_recovery'.
CHANGE REPLICATION SOURCE TO SOURCE_TLS_CIPHERSUITES="foo" FOR CHANNEL "group_replication_recovery";
ERROR HY000: CHANGE REPLICATION SOURCE with the given parameters cannot be performed on channel 'group_replication_recovery'.
CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER=1 FOR CHANNEL "group_replication_recovery";
ERROR HY000: CHANGE REPLICATION SOURCE with the given parameters cannot be performed on channel 'group_replication_recovery'.

# ERROR when executing STOP REPLICA on GR recovery channel
STOP REPLICA FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing START REPLICA on GR recovery channel
START REPLICA FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing STOP REPLICA IO_THREAD on GR recovery channel
STOP REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing START REPLICA IO_THREAD on GR recovery channel
START REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing STOP REPLICA SQL_THREAD on GR recovery channel
STOP REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing START REPLICA SQL_THREAD on GR recovery channel
START REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing SHOW REPLICA STATUS on GR recovery channel
SHOW REPLICA STATUS FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing SHOW RELAYLOG EVENTS on GR recovery channel
SHOW RELAYLOG EVENTS  FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing FLUSH RELAY LOGS on GR recovery channel
FLUSH RELAY LOGS FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing RESET REPLICA command on GR recovery channel
RESET REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing RESET REPLICA ALL command on GR recovery channel
RESET REPLICA ALL FOR CHANNEL "group_replication_recovery";
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# Add some data for recovery on M1. Start GR on M2.
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
[connection server2]
set session sql_log_bin=0;
call mtr.add_suppression("Transaction cannot be executed while Group Replication is recovering.*");
call mtr.add_suppression("Run function 'before_commit' in plugin 'group_replication' failed");
set session sql_log_bin=1;
CHANGE REPLICATION SOURCE TO SOURCE_USER="root" FOR CHANNEL "group_replication_recovery";
include/start_group_replication.inc

# Test commands for recovery channel when MEMBER_STATE: ONLINE and
# recovery channel is PRESENT but INACTIVE.

# STOP REPLICA is blocked on GR recovery channel
STOP REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: STOP REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA is blocked on GR recovery channel
START REPLICA FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA IO_THREAD is blocked on GR recovery channel
STOP REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA IO_THREAD is blocked on GR recovery channel
START REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA SQL_THREAD is blocked on GR recovery channel
STOP REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA SQL_THREAD is blocked on GR recovery channel
START REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# SHOW REPLICA STATUS - check that recovery channel is inactive
include/assert.inc [recovery channel is inactive]

# SHOW RELAYLOG EVENTS - check that relaylogs are created
include/assert.inc [Relay logs are created]

# SUCCESS when executing FLUSH RELAY LOGS on GR recovery channel
FLUSH RELAY LOGS FOR CHANNEL 'group_replication_recovery';

# SUCCESS when executing RESET REPLICA on GR recovery channel
RESET REPLICA FOR CHANNEL "group_replication_recovery";

# Execute RESET REPLICA ALL FOR CHANNEL to delete the recovery channel
# and related files
RESET REPLICA ALL FOR CHANNEL "group_replication_recovery";

# Stop GR on M2. Add data on M1. Lock table on M2 to block recovery.
# Start GR on M2.
[connection server2]
include/stop_group_replication.inc
[connection server1]
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
[connection server_2]
LOCK TABLE t1 READ;
[connection server2]
CHANGE REPLICATION SOURCE TO SOURCE_USER="root" FOR CHANNEL "group_replication_recovery";

# Ensure that M2 is blocked in recovery stage so channel exists
include/start_group_replication.inc

# Now when M2 is in RECOVERING state, test commands for recovery channel
# when MEMBER_STATE: RECOVERING and recovery channel is ACTIVE.

# STOP REPLICA is blocked on GR recovery channel
STOP REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: STOP REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA is blocked on GR recovery channel
START REPLICA FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA IO_THREAD is blocked on GR recovery channel
STOP REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA IO_THREAD is blocked on GR recovery channel
START REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA IO_THREAD with UNTIL option is blocked on GR recovery channel
START REPLICA IO_THREAD UNTIL SOURCE_LOG_FILE = 'server-binary-log.000001', SOURCE_LOG_POS = 754 FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA SQL_THREAD is blocked on GR recovery channel
STOP REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA SQL_THREAD is blocked on GR recovery channel
START REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA SQL_THREAD with UNTIL option is blocked on GR recovery channel
START REPLICA SQL_THREAD UNTIL SQL_AFTER_GTIDS='11111111-1111-1111-1111-111111111111:1-23' FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA SQL_THREAD with UNTIL option is blocked on GR recovery channel
START REPLICA SQL_THREAD UNTIL RELAY_LOG_FILE = 'server-relay-log-group_replication_recovery.000001', RELAY_LOG_POS = 854 FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# SHOW REPLICA STATUS - check that recovery channel is active
include/assert.inc [recovery channel is active]

# SHOW RELAYLOG EVENTS - Relay log files should exists
include/assert.inc [Relay log name should not be empty as the command successfully executed.]

# ERROR when executing FLUSH RELAY LOGS on GR recovery channel
FLUSH RELAY LOGS FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Error on observer while running replication hook 'before_commit'.

# RESET REPLICA command is blocked only when recovery channel is active.
RESET REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: This operation cannot be performed with running replication threads; run STOP REPLICA FOR CHANNEL 'group_replication_recovery' first

# RESET REPLICA [ALL] command is blocked only when recovery channel is active.
RESET REPLICA ALL FOR CHANNEL "group_replication_recovery";
ERROR HY000: This operation cannot be performed with running replication threads; run STOP REPLICA FOR CHANNEL 'group_replication_recovery' first

# Unlock tables on M2 and drop table t1 on M1. Stop GR on M2. Test
# for recovery channel when MEMBER_STATE: OFFLINE and recovery channel
# is PRESENT but INACTIVE.
[connection server_2]
UNLOCK TABLES;
[connection server1]
DROP TABLE t1;
include/rpl/sync.inc
[connection server2]
include/stop_group_replication.inc

# STOP REPLICA is blocked on GR recovery channel
STOP REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: STOP REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA is blocked on GR recovery channel
START REPLICA FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA IO_THREAD is blocked on GR recovery channel
STOP REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA IO_THREAD is blocked on GR recovery channel
START REPLICA IO_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA IO_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# STOP REPLICA SQL_THREAD is blocked on GR recovery channel
STOP REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: STOP REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# START REPLICA SQL_THREAD is blocked on GR recovery channel
START REPLICA SQL_THREAD FOR CHANNEL 'group_replication_recovery';
ERROR HY000: START REPLICA SQL_THREAD FOR CHANNEL cannot be performed on channel 'group_replication_recovery'.

# SHOW REPLICA STATUS - check that recovery channel is inactive
include/assert.inc [recovery channel is inactive]

# SHOW RELAYLOG EVENTS - check that relaylogs are not deleted
include/assert.inc [Relay logs are not deleted]

# Execute RESET REPLICA ALL FOR CHANNEL to delete the recovery channel
# and related files
RESET REPLICA ALL FOR CHANNEL "group_replication_recovery";

# ERROR when executing RESET REPLICA on GR recovery channel
RESET REPLICA FOR CHANNEL "group_replication_recovery";
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.

# ERROR when executing FLUSH RELAY LOGS on GR recovery channel
FLUSH RELAY LOGS FOR CHANNEL 'group_replication_recovery';
ERROR HY000: Replica channel 'group_replication_recovery' does not exist.
include/group_replication_end.inc
