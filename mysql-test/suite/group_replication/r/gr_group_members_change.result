include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]
SET @debug_save= @@GLOBAL.DEBUG;
#
# 1) Setup a new single member group
#
server1
# Set the debug flag to block recovery
SET @@GLOBAL.DEBUG='d,recovery_thread_wait_before_finish';
# Member should be offline before start
include/assert.inc [On the new stopped member, the status is OFFLINE]
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
# Member should be online as the member is alone and doesn't need recovery
include/gr_wait_for_member_state.inc
#
# 2) A new member enters the existing group
#
SET @@GLOBAL.DEBUG='+d,dump_thread_before_read_event';
server2
# Member should be marked as on recovery on both members
include/start_group_replication.inc
server1
include/gr_wait_for_member_state.inc
SET @@GLOBAL.DEBUG='-d,dump_thread_before_read_event';
SET DEBUG_SYNC = "now SIGNAL signal.continue";
server2
# Member should be marked as online on both members
include/gr_wait_for_member_state.inc
server1
SET DEBUG_SYNC= 'RESET';
include/gr_wait_for_member_state.inc
#
# 3) A member leaves the existing group
#
# Add a new member to hold quorum
server3
include/start_group_replication.inc
# Member should be marked as online
include/gr_wait_for_member_state.inc
DROP TABLE t1;
include/stop_group_replication.inc
# Member should be marked as offline after stop
include/gr_wait_for_member_state.inc
#
# Cleaning up
#
server3
SET @@GLOBAL.DEBUG= @debug_save;
server2
SET @@GLOBAL.DEBUG= @debug_save;
server1
SET @@GLOBAL.DEBUG= @debug_save;
include/group_replication_end.inc
