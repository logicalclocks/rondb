include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]
# 1. Make server 2 fail when sending a prepare message
#
[connection server2]
SET GLOBAL debug = '+d,gr_corrupted_transaction_prepare_message';
# 2. On server 1 execute a transactions that:
#    - Uses a tag
#    - Uses consistency level AFTER
#
[connection server1]
CREATE TABLE t1(id INT PRIMARY KEY);
[connection server_1]
SET @@SESSION.group_replication_consistency= AFTER;
SET GTID_NEXT='AUTOMATIC:tag_1';
INSERT INTO t1 VALUES (1);
# 3. Both server 1 and server 2 will read the message with the corrupted tag
#    Both servers error out.
#    The transaction will fail on server 1 but survive on server 2
#
[connection server1]
include/gr_wait_for_member_state.inc
[connection server2]
SET GLOBAL debug = '-d,gr_corrupted_transaction_prepare_message';
include/gr_wait_for_member_state.inc
[connection server_1]
ERROR HY000: Error on observer while running replication hook 'before_commit'.
SET GTID_NEXT='AUTOMATIC';
# 4. Restart the group
#
include/stop_group_replication.inc
[connection server2]
include/stop_group_replication.inc
include/start_and_bootstrap_group_replication.inc
[connection server1]
include/start_group_replication.inc
# 5. On server 1 execute another transactions that:
#    - Uses a tag
#    - Uses consistency level AFTER
#    It should now succeed
#
SET @@SESSION.group_replication_consistency= AFTER;
SET GTID_NEXT='AUTOMATIC:tag_1';
INSERT INTO t1 VALUES (2);
SET GTID_NEXT='AUTOMATIC';
include/rpl/sync.inc
[connection server2]
include/assert.inc ['There are 2 values in table t1']
# 6. Cleanup
#
DROP TABLE t1;
include/suppress_messages.inc
# Connection 1 suppresses message <Failed to decode Group Replication message: Transaction_prepared_message.>.
# Connection 1 suppresses message <The Applier process of Group Replication found an error and was requested to stop:>.
# Connection 1 suppresses message <Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.>.
# Connection 1 suppresses message <Due to a plugin error, some transactions were unable to be certified and will now rollback.>.
# Connection 1 suppresses message <The server was automatically set into read only mode after an error was detected.>.
# Connection 1 suppresses message <The server was automatically set into offline mode after an error was detected.>.
# Connection 1 suppresses message <Error while waiting for conflict detection procedure to finish on session>.
# Connection 1 suppresses message <Skipping leave operation: concurrent attempt to leave the group is on-going.>.
# Connection 1 suppresses message <Replica SQL for channel 'group_replication_applier': Worker . failed executing transaction>.
# Connection 1 suppresses message <Run function 'before_commit' in plugin 'group_replication' failed>.
# Connection 1 suppresses message <.* The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state. *>.
# Connection 1 suppresses message <Error on transaction .* while waiting for being prepared on all group members *>.
# Connection 2 suppresses message <Failed to decode Group Replication message: Transaction_prepared_message.>.
# Connection 2 suppresses message <The Applier process of Group Replication found an error and was requested to stop:>.
# Connection 2 suppresses message <Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.>.
# Connection 2 suppresses message <Due to a plugin error, some transactions were unable to be certified and will now rollback.>.
# Connection 2 suppresses message <The server was automatically set into read only mode after an error was detected.>.
# Connection 2 suppresses message <The server was automatically set into offline mode after an error was detected.>.
# Connection 2 suppresses message <Error while waiting for conflict detection procedure to finish on session>.
# Connection 2 suppresses message <Skipping leave operation: concurrent attempt to leave the group is on-going.>.
# Connection 2 suppresses message <Replica SQL for channel 'group_replication_applier': Worker . failed executing transaction>.
# Connection 2 suppresses message <Run function 'before_commit' in plugin 'group_replication' failed>.
# Connection 2 suppresses message <.* The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state. *>.
# Connection 2 suppresses message <Error on transaction .* while waiting for being prepared on all group members *>.
include/group_replication_end.inc
