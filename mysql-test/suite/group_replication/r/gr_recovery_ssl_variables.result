include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
[connection server2]
#
# Make a copy of existing SSL options before modifying them.
#
set session sql_log_bin=0;
call mtr.add_suppression("There was an error when connecting to the donor*");
call mtr.add_suppression("For details please check performance_schema.replication_connection_status table and error log messages of Replica I/O for channel group_replication_recovery.");
call mtr.add_suppression("Maximum number of retries when*");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("The server was automatically set into offline mode after an error was detected.");
set session sql_log_bin=1;
#
# Set group_replication_recovery_use_ssl & group_replication_recovery_ssl_verify_server_cert
#
SET GLOBAL group_replication_recovery_retry_count = 1;
SET GLOBAL group_replication_recovery_use_ssl =  1;
SET GLOBAL group_replication_recovery_ssl_verify_server_cert = 1;
#
# Verify that none of the above SSL options are already set
# These options are only set when distributed recovery starts
#
Source_SSL_Allowed = 'No such row'
Source_SSL_Verify_Server_Cert = 'No such row'
#
# See when SSL is required that Recovery cannot advance when not properly configured
#
[connection server1]
INSERT INTO t1 VALUES (1);
[connection server2]
include/start_group_replication.inc
#
# Verify that SSL options are shown in SHOW REPLICA STATUS output
#
Source_SSL_Allowed = 'Yes'
Source_SSL_Verify_Server_Cert = 'Yes'
include/stop_group_replication.inc
#
# Reset SSL variables for recovery channel
#
SET GLOBAL group_replication_recovery_use_ssl = default;
SET GLOBAL group_replication_recovery_ssl_verify_server_cert = default;
#
# Verify that group replication member state is online.
#
[connection server1]
INSERT INTO t1 VALUES (2);
[connection server2]
include/start_group_replication.inc
#
# Verify that Source_SSL_Allowed and Source_SSL_Verify_Server_Cert are set to default.
#
Source_SSL_Allowed = 'No'
Source_SSL_Verify_Server_Cert = 'No'
#
# Clean up
#
[connection server1]
DROP TABLE t1;
[connection server2]
SET @@GLOBAL.group_replication_recovery_use_ssl= 0;
SET @@GLOBAL.group_replication_recovery_ssl_verify_server_cert= 0;
SET @@GLOBAL.group_replication_recovery_retry_count= 10;
include/group_replication_end.inc
