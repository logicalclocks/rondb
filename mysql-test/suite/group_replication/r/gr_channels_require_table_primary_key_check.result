include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Check that the value GENERATE can not be used for REQUIRE_TABLE_PRIMARY_KEY_CHECK
#    with Group Replication channels
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = GENERATE FOR CHANNEL "group_replication_recovery";
ERROR HY000: On a Group Replication channel, setting REQUIRE_TABLE_PRIMARY_KEY_CHECK to 'GENERATE' is not allowed.
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = GENERATE FOR CHANNEL "group_replication_applier";
ERROR HY000: On a Group Replication channel, setting REQUIRE_TABLE_PRIMARY_KEY_CHECK to 'GENERATE' is not allowed.

# 2. Set `REQUIRE_TABLE_PRIMARY_KEY_CHECK` option for the applier channel
#    Start a member and check the `REQUIRE_TABLE_PRIMARY_KEY_CHECK` option is set
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = OFF FOR CHANNEL "group_replication_applier";
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
include/assert.inc [require_table_primary_key_check in performance_schema.replication_applier_configuration is set to OFF for "group_replication_applier"]

# 3. Block the applier to block server 2 recovery
SET @@GLOBAL.DEBUG='+d,dump_thread_before_read_event';

# 4. Set `REQUIRE_TABLE_PRIMARY_KEY_CHECK` option for the recovery channel
#    Start the member and check the `REQUIRE_TABLE_PRIMARY_KEY_CHECK` option is set
[connection server1]
INSERT INTO t1 VALUES (1);
[connection server2]
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = ON FOR CHANNEL "group_replication_recovery";
include/start_group_replication.inc
include/assert.inc [require_table_primary_key_check in performance_schema.replication_applier_configuration is set to ON for "group_replication_recovery"]

# 5. Cleanup
[connection server1]
SET @@GLOBAL.DEBUG='-d,dump_thread_before_read_event';
SET DEBUG_SYNC = "now SIGNAL signal.continue";
[connection server2]
include/gr_wait_for_member_state.inc
[connection server1]
SET DEBUG_SYNC= 'RESET';
DROP TABLE t1;
include/group_replication_end.inc
