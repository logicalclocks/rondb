################################################################################
# This test proves that recovery metadata sender is re-selected if the original
# donor crashes. Since message was sent by M2 on crash, proved it had metadata.
# This test verifies FR3 and FR9 of wl#14595.
#
# FR 3. When a new member joins a group having all the members with MySQL
#       version greater than equal to 8.3.0, then all ONLINE group members MUST
#       store the list of members that were ONLINE when this new member joined.
#
# FR 9. When a new member joins a group having all the members with MySQL
#       version greater than equal to 8.3.0, and if the member selected to send
#       'GR Recovery Metadata' to the new joining member leaves the group or
#       changes it's member state from ONLINE to either of ERROR/OFFLINE before
#       the joiner has received the metadata, then another member which was
#       ONLINE when this new member joined and still is ONLINE MUST be selected
#       to send the 'GR Recovery Metadata'.
#
# Test:
# 0. The test requires two servers: M1, M2 and M3.
# 1. Bootstrap start a GROUP on M1
# 2. Start GR on M2.
# 3. Set debug point gr_crash_before_recovery_metadata_send on first donor.
# 5. Start GR on M3.
# 6. Donor will crash.
# 7. Other online member will send the metadata.
# 8. Cleanup.
#
################################################################################

--source include/big_test.inc
--source include/have_debug.inc
--source include/not_windows.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_server_count= 3
--source include/group_replication.inc

--echo
--echo ############################################################
--echo # 1. Bootstrap start a GROUP on M1

--let $rpl_connection_name= server1
--source include/connection.inc

--let $member1_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--source include/start_and_bootstrap_group_replication.inc
--disable_query_log
--let $member1_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--let $local_address_server1= `SELECT @@GLOBAL.group_replication_local_address`
--let $group_seeds_server1= `SELECT @@global.group_replication_group_seeds`
--enable_query_log

--echo
--echo ############################################################
--echo # 2. Start GR on M2.

--let $rpl_connection_name= server2
--source include/connection.inc

--let $member2_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--source include/start_group_replication.inc

--echo
--echo ############################################################
--echo # 3. Set debug point gr_crash_before_recovery_metadata_send on first donor.

--let $crash_member= query_get_value(SELECT Member_id FROM performance_schema.replication_group_members ORDER BY Member_id, Member_id, 1)

--let $server_to_crash= 1
if ($crash_member == $member2_uuid) {
  --let $server_to_crash= 2
}

--connection server$server_to_crash

--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.$server_to_crash.expect
SET @@GLOBAL.DEBUG='+d,gr_crash_before_recovery_metadata_send';

--echo
--echo ############################################################
--echo # 5. Start GR on M3.

--let $rpl_connection_name= server3
--source include/connection.inc

--let $group_replication_start_member_state= RECOVERING
--source include/start_group_replication.inc

--echo
--echo ############################################################
--echo # 6. Donor will crash.

--connection server$server_to_crash
--source include/wait_until_disconnected.inc
# Inform MTR that it should restart the aborted member
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.$server_to_crash.expect
--let $rpl_server_number= 1
--source include/rpl/reconnect.inc
--source include/wait_until_connected_again.inc
SET @@GLOBAL.DEBUG='-d,gr_crash_before_recovery_metadata_send';


--echo
--echo ############################################################
--echo # 7. Other online member will send the metadata.

--let $rpl_connection_name= server3
--source include/connection.inc

--let $group_replication_member_state = ONLINE
--source include/gr_wait_for_member_state.inc

--echo
--echo ############################################################
--echo # 8. Cleanup.

--source include/group_replication_end.inc
