################################################################################
# BUG#21180035 - ADD SUPPORT TO SKIP GTIDS ON GROUP REPLICATION
#
# CASE 1 - Single node testing
#
# Test:
# 0) The test requires one server: M1.
# 1) Bootstrap start a group on M1.
# 2) On M1 execute a transaction with GTID_NEXT=UUID_GROUP:2. M1 will have:
#    GTID EXECUTED = UUID_GROUP:2.
# 3) On M1 SET GTID_NEXT='AUTOMATIC'.
# 4) On M1 execute a transaction, it will have:
#    GTID EXECUTED = UUID_GROUP:1-2.
# 5) Verify sequence of events in binlog on M1.
# 6) Clean up.
################################################################################

--let $group_replication_group_name= 32e14712-01d2-11e6-a992-02420ef39c5b
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--let $rpl_connection_name= server1
--source include/connection.inc
SET SESSION sql_log_bin= 0;
--source include/rpl/gtid_utils.inc
SET SESSION sql_log_bin= 1;

--source include/start_and_bootstrap_group_replication.inc
--eval SET GTID_NEXT= "$group_replication_group_name:2"
CREATE TABLE t1 (i INT PRIMARY KEY);
SET GTID_NEXT='AUTOMATIC';

--let $assert_text= GTID_EXECUTED must contain 1 transactions, 0 from view change and other being the create table.
--let $assert_cond= GTID_IS_EQUAL(@@GLOBAL.GTID_EXECUTED,"$group_replication_group_name:2")
--source include/assert.inc

INSERT INTO t1 VALUES(1);

--let $assert_text= GTID_EXECUTED must contain 2 transactions, the new one from the insert.
--let $assert_cond= GTID_IS_EQUAL(@@GLOBAL.GTID_EXECUTED,"$group_replication_group_name:1-2")
--source include/assert.inc

--let $event_sequence= Gtid # !Q(CREATE.*) # Gtid # !Begin # Table_map # Write_rows # !Commit
--source include/rpl/assert_binlog_events.inc

# Cleanup

DROP TABLE t1;
--let $rpl_connection_name= server1
--source include/connection.inc
SET SESSION sql_log_bin= 0;
--source include/rpl/gtid_utils_end.inc
SET SESSION sql_log_bin= 1;
--source include/group_replication_end.inc
