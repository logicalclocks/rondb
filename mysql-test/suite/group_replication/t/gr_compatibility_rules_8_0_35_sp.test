################################################################################
# Validate that a 8.0.35 server can join a group in single-primary mode which
# version is a higher 8.0 patch version.
#
# Test:
# 0. The test requires three servers: M1, M2 and M3.
# 1. Bootstrap the group with a server that is one patch version
#    higher than the current version (8.0.35 or higher).
# 2. Join a server that is one patch version
#    higher than the current version (8.0.35 or higher).
# 3. Join a 8.0.35 to the group.
# 4. Validate that the group has one primary and two secondaries.
# 5. Try to make server2, a higher version, the primary.
#    It must fail.
# 6. After the primary, server1, leaves, server3 is the new
#    primary.
# 7. Clean up.
################################################################################
--source include/have_debug.inc
--source include/have_group_replication_plugin.inc
--let $rpl_group_replication_single_primary_mode =1
--let $rpl_server_count= 3
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc


--echo
--echo ############################################################
--echo # 1. Bootstrap the group with a server that is one patch version
--echo #    higher than the current version (8.0.35 or higher).
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Error while executing a group configuration operation: Error processing configuration start message: The appointed primary member has a version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin= 1;

SET @@GLOBAL.DEBUG= '+d,group_replication_compatibility_higher_patch_version';
--source include/start_and_bootstrap_group_replication.inc


--echo
--echo ############################################################
--echo # 2. Join a server that is one patch version
--echo #    higher than the current version (8.0.35 or higher).
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("The function 'group_replication_set_as_primary' failed. Error processing configuration start message: The appointed primary member has a version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin= 1;

--let $server2_uuid = `SELECT @@server_uuid`
SET @@GLOBAL.DEBUG= '+d,group_replication_compatibility_higher_patch_version';
--source include/start_group_replication.inc


--echo
--echo ############################################################
--echo # 3. Join a 8.0.35 to the group.
--let $rpl_connection_name= server3
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Error while executing a group configuration operation: Error processing configuration start message: The appointed primary member has a version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin= 1;

--let $server3_uuid = `SELECT @@server_uuid`
SET @@GLOBAL.DEBUG= '+d,group_replication_version_8_0_35';
--source include/start_group_replication.inc

--replace_result $server3_uuid SERVER3_UUID
--eval SELECT MEMBER_STATE, MEMBER_ROLE, MEMBER_VERSION FROM performance_schema.replication_group_members WHERE MEMBER_ID='$server3_uuid'


--echo
--echo ############################################################
--echo # 4. Validate that the group has one primary and two secondaries.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_number_of_members = 3
--source include/gr_wait_for_number_of_members.inc

--source include/gr_assert_primary_member.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc


--echo
--echo ############################################################
--echo # 5. Try to make server2, a higher version, the primary.
--echo #    It must fail.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--replace_result $server2_uuid SERVER2_UUID
--error ER_GRP_RPL_UDF_ERROR
--eval SELECT group_replication_set_as_primary("$server2_uuid")

--source include/gr_assert_secondary_member.inc

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/gr_assert_primary_member.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc


--echo
--echo ############################################################
--echo # 6. After the primary, server1, leaves, server3 is the new
--echo #    primary.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--let $group_replication_number_of_members = 2
--source include/gr_wait_for_number_of_members.inc

--source include/gr_assert_primary_member.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc


--echo
--echo ############################################################
--echo # 7. Clean up.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @@GLOBAL.DEBUG= '-d,group_replication_compatibility_higher_patch_version';

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET @@GLOBAL.DEBUG= '-d,group_replication_compatibility_higher_patch_version';

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
SET @@GLOBAL.DEBUG= '-d,group_replication_version_8_0_35';

--source include/group_replication_end.inc
