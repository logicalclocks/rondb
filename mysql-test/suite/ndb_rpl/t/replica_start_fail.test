--source include/have_ndb.inc
--source include/have_binlog_format_mixed_or_row.inc

# Configure replication and start replicating
--source suite/ndb_rpl/ndb_rpl_init_source_replica.inc

CREATE TABLE t1 (
  a INT PRIMARY KEY,
  b VARCHAR(32)
) engine=ndb;

INSERT INTO t1 VALUES (1, "row 1");

--source include/rpl/sync_to_replica.inc

--source include/rpl/connection_replica.inc
SELECT * FROM t1 ORDER BY a;

--echo #
--echo # BUG#36054134 Fail to run start_hook error
--echo # - Starting replica to apply changes when NDB is not ready or started
--echo #   the reported error message is not helpful
--echo #


--echo # Stop and reset replica to make it apply everything again
--source include/rpl/stop_all_replicas.inc
--source include/rpl/connection_replica.inc
--source include/rpl/reset_replica.inc
DROP TABLE t1;

call mtr.add_suppression("An incident event has been written");
call mtr.add_suppression("Replica: Connection to NDB not ready");
call mtr.add_suppression("Failed to open");
call mtr.add_suppression("Could not connect to storage engine");

--echo # Stop replica cluster
--exec $NDB_MGM --ndb-connectstring=$NDB_CONNECTSTRING_SLAVE -e "all restart -n"
--exec $NDB_WAITER --ndb-connectstring=$NDB_CONNECTSTRING_SLAVE --not-started  2>&1 > /dev/null

--echo # Start replica and inspect error message
START REPLICA;
--let $slave_sql_errno=157
--source include/rpl/wait_for_applier_error.inc

--echo # Start cluster
--exec $NDB_MGM --ndb-connectstring=$NDB_CONNECTSTRING_SLAVE -e "all start"
--exec $NDB_WAITER --ndb-connectstring=$NDB_CONNECTSTRING_SLAVE 2>&1 > /dev/null

--echo # Start replica again
--source include/rpl/start_all_replicas.inc

--echo # Cleanup
--source include/rpl/connection_source.inc
DROP TABLE t1;
--source include/rpl/sync_to_replica.inc

--source include/rpl/deinit.inc
