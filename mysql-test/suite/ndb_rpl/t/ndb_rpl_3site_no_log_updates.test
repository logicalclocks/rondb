--source include/have_ndb.inc

--echo ## BUG#35199996 table map entry for certain table were logged in to the
--echo ## binlogs even though the log_replica_updates is disabled

## In this setup, server 2 should not log into its binlog the updates
## applied through the relay log including the Table_map event. If the
## Table_map event was logged, it would relay it to server 3 causing
## it to have replication errors, because t1 does not exist in server
## 3 (no create statement was ever applied there)

# set up circular replication
--let $rpl_server_count= 3
--let $rpl_topology= 1->2->3->1
--source include/rpl_init.inc

--let $rpl_connection_name= server.1
--let $rpl_server_number= 1
--source include/rpl_connect.inc

--let $rpl_connection_name= server.2
--let $rpl_server_number= 2
--source include/rpl_connect.inc
--let $rpl_connection_name= server.2
--source include/rpl_connection.inc
--source include/save_binlog_position.inc
--let $relaylog_file= query_get_value(SHOW REPLICA STATUS, Relay_Log_File, 1)
--let $relaylog_position= query_get_value(SHOW REPLICA STATUS, Relay_Log_Pos, 1)

--let $rpl_connection_name= server.3
--let $rpl_server_number= 3
--source include/rpl_connect.inc

--let $rpl_connection_name= server.1
--source include/rpl_connection.inc

--echo # Insert some data
CREATE TABLE t1 (a INT PRIMARY KEY, b BLOB) ENGINE = NDB;
INSERT INTO t1 VALUES (1, repeat(0x41, 8)),
                      (2, repeat(0x41, 8)),
                      (3, repeat(0x41, 8)),
                      (4, repeat(0x41, 8)),
                      (5, repeat(0x41, 8));
SELECT * FROM t1 ORDER BY a;
--sync_slave_with_master server.2
SELECT * FROM t1 ORDER BY a;

--let $create_stmt= !Gtid_or_anon # !Q(CREATE.*)
--let $insert_stmt= !Gtid_or_anon # !Begin # Table_map/.*t1.* # Table_map # Write_rows # Write_rows # !Commit
--let $event_sequence= $create_stmt # $insert_stmt
--let $dont_print_pattern= 1

--echo # server.2 binary log does NOT contain t1 Table_map
--let $invert= 1
--source include/assert_binlog_events.inc

--echo # server.2 relay log contains t1 Table_map
--let $binlog_position= $relaylog_position
--let $binlog_file= $relaylog_file
--let $invert= 0
--let $relay_log= 1
--source include/assert_binlog_events.inc

--sync_slave_with_master server.3
--echo # server.3 should not have t1
--error ER_NO_SUCH_TABLE
SELECT * FROM t1 ORDER BY a;

--echo Cleanup
--let $rpl_connection_name= server.1
--source include/rpl_connection.inc
DROP TABLE t1;
--source include/rpl_end.inc
