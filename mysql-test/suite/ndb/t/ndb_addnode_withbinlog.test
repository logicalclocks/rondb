-- source include/have_multi_ndb.inc
-- source include/have_binlog_format_mixed_or_row.inc
-- source include/not_parallel.inc


--connection server1

show variables like 'log_bin';
show variables like 'ndb_log_bin';

--echo Test 1 : Show that reorg of table being Binlogged does not result 
--echo          in any Binlog content

create table t1 (a int primary key, b varchar(100), c int, unique(c)) engine=ndb;

--echo Insert 8192 rows
--disable_query_log
insert into t1 values (1, repeat('C', 90),2);
insert into t1 select a+1, b, c+1 from t1;
insert into t1 select a+2, b, c+2 from t1;
insert into t1 select a+4, b, c+4 from t1;
insert into t1 select a+8, b, c+8 from t1;
insert into t1 select a+16, b, c+16 from t1;
insert into t1 select a+32, b, c+32 from t1;
insert into t1 select a+64, b, c+64 from t1;
insert into t1 select a+128, b, c+128 from t1;
insert into t1 select a+256, b, c+256 from t1;
insert into t1 select a+512, b, c+512 from t1;
insert into t1 select a+1024, b, c+1024 from t1;
insert into t1 select a+2048, b, c+2048 from t1;
insert into t1 select a+4096, b, c+4096 from t1;
--enable_query_log

--echo Show t1 distribution prior to reorg
let ndb_table=t1;
--source show_partition_info.inc

--echo Add new nodes
--exec $NDB_MGM -e "create nodegroup 3,4"

--echo Show empty binlog prior to reorg
# Sync binlog
--disable_query_log
--disable_result_log
show binlog events;
--enable_result_log
--enable_query_log
reset master;
#--source include/show_binlog_events.inc
select count(1), sum(inserts), sum(updates), sum(deletes) from mysql.ndb_binlog_index;

--echo Reorg table to use new nodes
alter table t1 reorganize partition;

--echo Show t1 distribution after reorg
let ndb_table=t1;
--source show_partition_info.inc

--echo Show empty binlog after reorg
# Sync binlog
--disable_query_log
--disable_result_log
show binlog events;
--enable_result_log
--enable_query_log
#--source include/show_binlog_events.inc
select count(1), sum(inserts), sum(updates), sum(deletes) from mysql.ndb_binlog_index;

--echo Cleanup
drop table t1;

--exec $NDB_MGM -e "drop nodegroup 1"


--echo Test 2 : Show that reorg of table with concurrent writes
--echo          Results in Binlog content

--echo Create table including Blobs for interest
create table test.t1 (a int auto_increment primary key,
                      b text,
                      c text,
                      d int, unique(d)) engine=ndb;

--echo Load 100 rows first

--disable_query_log
--let $val=1

while($val < 100)
{
  --eval insert into test.t1 values ($val, repeat('$val', 1000), repeat('$val', 1000), $val+1);
  --inc $val
}

--enable_query_log

--echo Show t1 distribution prior to reorg
let ndb_table=t1;
--source show_partition_info.inc
#select * from ndbinfo.memory_per_fragment where fq_name like '%t1';

--echo Add new nodes
--exec $NDB_MGM -e "create nodegroup 3,4"

# Sync binlog
--disable_query_log
--disable_result_log
show binlog events;
--enable_result_log
--enable_query_log

reset master;
--echo Show empty binlog prior to test
#--source include/show_binlog_events.inc
select count(1), sum(inserts), sum(updates), sum(deletes) from mysql.ndb_binlog_index;

--echo Request reorg starting in 2 seconds
--connection server2
--send select sleep(2); alter table test.t1 reorganize partition;

--echo Start I/U/D load on table
--connection server1
--disable_query_log
while ($val < 10000)
{
  --error 0,1297,1412,1205
  --eval insert into test.t1 values ($val, repeat('$val', 1000), repeat('$val', 1000), $val+1);
  if ($val > 200)
  {
    # Use double update in transaction for variety
    BEGIN;
      --error 0,1297,1412,1205
      --eval update test.t1 set b=repeat('$val', 1000), c= repeat('$val', 1000) where a=($val - 100);
      --error 0,1297,1412,1205
      --eval update test.t1 set b=repeat('$val', 333), c=repeat('$val', 1111) where a=($val - 100);
    COMMIT;
  }
  if ($val > 300)
  {
    --error 0,1297,1412,1205
    --eval delete from test.t1 where a=($val-200);
  }
  --inc $val
}
--enable_query_log

--echo Wait for reorg to complete
--connection server2
--reap

--connection server1

--echo Show t1 distribution after reorg
let ndb_table=t1;
--source show_partition_info.inc
# select * from ndbinfo.memory_per_fragment where fq_name like '%t1';

--echo Show Binlog content after reorg
--echo Expect to see content
# Sync binlog
--disable_query_log
--disable_result_log
show binlog events;
--enable_result_log
--enable_query_log

#--source include/show_binlog_events.inc
select count(epoch) > 100,  
       sum(inserts) > 1000, 
       sum(updates) > 1000, 
       sum(deletes) > 1000 
  from mysql.ndb_binlog_index;

--echo cleanup
drop table test.t1;

--exec $NDB_MGM -e "drop nodegroup 1"
