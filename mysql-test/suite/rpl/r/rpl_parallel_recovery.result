include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]
[connection slave]
CALL mtr.add_suppression("The replica coordinator and worker threads are stopped");
include/rpl/stop_applier.inc
SET @@global.max_relay_log_size=4096;
SET @@global.innodb_lock_wait_timeout=1;
SET @@global.replica_transaction_retries= 0;
SET GLOBAL replica_preserve_commit_order= OFF;
include/rpl/start_applier.inc
include/assert.inc [the max size of relay log must be 4096]
[connection master]
# ASSERTION 1: a simple START REPLICA UNTIL SQL_AFTER_MTS_GAPS, after the
#              applier stops, works
[connection master]
CREATE TABLE t1 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t1 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t2 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t2 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t3 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t3 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t4 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t4 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t5 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t5 VALUES (1, REPEAT('a', 8192));
include/rpl/sync_to_replica.inc
include/rpl/stop_applier.inc
[connection master]
UPDATE t1 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t2 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t3 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t4 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
[connection slave1]
START TRANSACTION;
SELECT * FROM t3 FOR UPDATE;
c1	c2
1	a...<8192>...a
[connection slave]
include/rpl/start_applier.inc
include/rpl/wait_for_applier_error.inc [errno=1205]
[connection slave1]
ROLLBACK;
[connection slave]
include/assert.inc [Assert that t1 has 1 records in it]
include/assert.inc [Assert that t2 has 1 records in it]
include/assert.inc [Assert that t3 has 0 records in it]
include/assert.inc [Assert that t4 has 1 records in it]
include/assert.inc [Assert that t5 has 0 records in it]
[connection master]
UPDATE t5 SET c1 = 2 , c2 = REPEAT('b', 8129) WHERE c1 = 1;
[connection slave]
START_REPLICA_UNTIL_AFTER_GAPS;
include/rpl/wait_for_replica_status.inc [Until_Condition]
include/rpl/wait_for_applier_to_stop.inc
include/assert.inc [Assert that t3 has 1 records in it]
include/assert.inc [Assert that t5 has 0 records in it]
[connection slave]
include/rpl/start_replica.inc
[connection master]
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
DROP TABLE t4;
DROP TABLE t5;
include/rpl/sync_to_replica.inc
[connection master]
# ASSERTION 2: a simple SQL_AFTER_MTS_GAPS, after restarting the server, works
[connection master]
CREATE TABLE t1 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t1 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t2 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t2 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t3 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t3 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t4 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t4 VALUES (1, REPEAT('a', 8192));
CREATE TABLE t5 (c1 INT AUTO_INCREMENT PRIMARY KEY, c2 TEXT) ENGINE = InnoDB;
INSERT INTO t5 VALUES (1, REPEAT('a', 8192));
include/rpl/sync_to_replica.inc
include/rpl/stop_applier.inc
[connection master]
UPDATE t1 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t2 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t3 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
UPDATE t4 SET c1 = 2 , c2 = REPEAT('b', 8192) WHERE c1 = 1;
[connection slave1]
START TRANSACTION;
SELECT * FROM t3 FOR UPDATE;
c1	c2
1	a...<8192>...a
[connection slave]
include/rpl/start_applier.inc
include/rpl/wait_for_applier_error.inc [errno=1205]
[connection slave1]
ROLLBACK;
[connection slave]
include/assert.inc [Assert that t1 has 1 records in it]
include/assert.inc [Assert that t2 has 1 records in it]
include/assert.inc [Assert that t3 has 0 records in it]
include/assert.inc [Assert that t4 has 1 records in it]
include/assert.inc [Assert that t5 has 0 records in it]
include/rpl/restart_server.inc [server_number=2]
[connection slave]
SET @@global.max_relay_log_size=4096;
SET @@global.innodb_lock_wait_timeout=1;
SET @@global.replica_transaction_retries= 0;
SET GLOBAL replica_preserve_commit_order= OFF;
[connection master]
UPDATE t5 SET c1 = 2 , c2 = REPEAT('b', 8129) WHERE c1 = 1;
[connection slave]
START_REPLICA_UNTIL_AFTER_GAPS;
include/rpl/wait_for_replica_status.inc [Until_Condition]
include/rpl/wait_for_applier_to_stop.inc
include/assert.inc [Assert that t3 has 1 records in it]
include/assert.inc [Assert that t5 has 0 records in it]
[connection slave]
include/rpl/start_replica.inc
[connection master]
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
DROP TABLE t4;
DROP TABLE t5;
include/rpl/sync_to_replica.inc
[connection master]
[connection master]
include/rpl/sync_to_replica.inc
include/rpl/stop_applier.inc
SET @@global.innodb_lock_wait_timeout=DEFAULT_INNODB_LOCK_WAIT_TIMEOUT;
SET @@global.replica_transaction_retries= DEFAULT_REPLICA_TRANSACTION_RETRIES;;
SET @@global.max_relay_log_size= DEFAULT_MAX_RELAY_LOG_SIZE;
SET @@global.replica_preserve_commit_order= DEFAULT_REPLICA_PRESERVE_COMMIT_ORDER;
include/rpl/start_applier.inc
include/rpl/deinit.inc
