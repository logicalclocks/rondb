include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]
DROP EVENT IF EXISTS test.justonce;
drop table if exists t1,t2;
CREATE TABLE `t1` (
`id` INT(10) UNSIGNED NOT NULL,
`c` VARCHAR(50) NOT NULL,
`ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1287	'utf8mb3' is deprecated and will be removed in a future release. Please use utf8mb4 instead
INSERT INTO t1 (id, c) VALUES (1, 'manually');
"Creating event test.justonce on the master"
CREATE EVENT test.justonce ON SCHEDULE EVERY 2 SECOND DO
INSERT IGNORE INTO t1 (id, c) VALUES (2, 'from justonce');
"Checking event is active on master"
SELECT event_schema, event_name, status, originator FROM information_schema.events WHERE event_name = 'justonce';
EVENT_SCHEMA	EVENT_NAME	STATUS	ORIGINATOR
test	justonce	ENABLED	1
"Checking event data on the master"
ONE
1
"Checking event data on the replica"
ZERO
0
"Checking event is inactive on replica"
SELECT event_name, status, originator FROM information_schema.events WHERE  event_name = 'justonce';
EVENT_NAME	STATUS	ORIGINATOR
justonce	REPLICA_SIDE_DISABLED	1
"Dropping event test.replica_once on the replica"
DROP EVENT IF EXISTS test.replica_once;
CREATE EVENT test.replica_once ON SCHEDULE EVERY 5 MINUTE STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR DO
INSERT IGNORE INTO t1(id, c) VALUES (3, 'from replica_once');
"Checking event status on the replica for originator value = replica's server_id"
SELECT event_name, status, originator FROM information_schema.events WHERE event_name = 'replica_once';
EVENT_NAME	STATUS	ORIGINATOR
replica_once	ENABLED	2
"Dropping event test.replica_once on the replica"
DROP EVENT IF EXISTS test.replica_once;
"Dropping event test.justonce on the master"
DROP EVENT IF EXISTS test.justonce;
"Creating event test.er on the master"
CREATE EVENT test.er ON SCHEDULE EVERY 3 SECOND STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR DO
INSERT IGNORE INTO t1(id, c) VALUES (4, 'from er');
"Checking event status on the master"
SELECT event_name, status, originator, event_definition FROM information_schema.events WHERE  event_name = 'er';
EVENT_NAME	STATUS	ORIGINATOR	EVENT_DEFINITION
er	ENABLED	1	INSERT IGNORE INTO t1(id, c) VALUES (4, 'from er')
"Checking event status on the replica"
SELECT event_name, status, originator, event_definition FROM information_schema.events WHERE event_name = 'er';
EVENT_NAME	STATUS	ORIGINATOR	EVENT_DEFINITION
er	REPLICA_SIDE_DISABLED	1	INSERT IGNORE INTO t1(id, c) VALUES (4, 'from er')
"Altering event test.er on the master"
ALTER EVENT test.er ON SCHEDULE EVERY 5 SECOND STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR DO
INSERT IGNORE INTO t1(id, c) VALUES (5, 'from alter er');
"Checking event status on the master"
SELECT event_name, status, originator, event_definition FROM information_schema.events WHERE event_name = 'er';
EVENT_NAME	STATUS	ORIGINATOR	EVENT_DEFINITION
er	ENABLED	1	INSERT IGNORE INTO t1(id, c) VALUES (5, 'from alter er')
"Checking event status on the replica"
SELECT event_name, status, originator, event_definition FROM information_schema.events WHERE event_name = 'er';
EVENT_NAME	STATUS	ORIGINATOR	EVENT_DEFINITION
er	REPLICA_SIDE_DISABLED	1	INSERT IGNORE INTO t1(id, c) VALUES (5, 'from alter er')
"Dropping event test.er on the master"
DROP EVENT test.er;
"Checking event status on the master"
SELECT  event_name, status, originator FROM information_schema.events;
EVENT_NAME	STATUS	ORIGINATOR
"Checking event status on the replica"
SELECT event_name, status, originator FROM information_schema.events;
EVENT_NAME	STATUS	ORIGINATOR
"Creating event test.replica_terminate on the replica"
CREATE EVENT test.replica_terminate ON SCHEDULE EVERY 3 SECOND STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR DO
INSERT IGNORE INTO t1(id, c) VALUES (6, 'from replica_terminate');
"Checking event status on the replica"
SELECT event_name, status, originator FROM information_schema.events WHERE event_name = 'replica_terminate';
EVENT_NAME	STATUS	ORIGINATOR
replica_terminate	ENABLED	2
"Dropping event test.replica_terminate on the replica"
DROP EVENT test.replica_terminate;
"Creating event test.replica_terminate with DISABLE ON REPLICA on the replica"
CREATE EVENT test.replica_terminate ON SCHEDULE EVERY 3 SECOND DISABLE ON REPLICA DO
INSERT IGNORE INTO t1(c) VALUES (7, 'from replica_terminate');
"Checking event status on the replica"
SELECT  event_name, status, originator FROM information_schema.events WHERE event_name = 'replica_terminate';
EVENT_NAME	STATUS	ORIGINATOR
replica_terminate	REPLICA_SIDE_DISABLED	2
"Dropping event test.replica_terminate on the replica"
DROP EVENT test.replica_terminate;
"Cleanup"
DROP TABLE t1;
include/rpl/deinit.inc
