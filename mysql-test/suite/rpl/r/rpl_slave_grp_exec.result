include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]

*** Preparing data ***
CREATE TABLE t1 (a INT NOT NULL, b VARCHAR(10)) ENGINE=MyISAM;
CREATE TABLE t2 LIKE t1;
CREATE TABLE t3 LIKE t1;
CREATE TRIGGER tr1 BEFORE UPDATE ON t1
FOR EACH ROW BEGIN
UPDATE t2 SET b='YY' WHERE a=NEW.a;
END|
CREATE TRIGGER tr2 AFTER UPDATE ON t1
FOR EACH ROW BEGIN
UPDATE t3 SET b='ZZ' WHERE a=NEW.a;
END|

*** Test non-transactional group w/o PK ***
INSERT INTO t3 VALUES(1, 'AA');
INSERT INTO t2 VALUES(1, 'AA');
INSERT INTO t1 VALUES(1, 'AA');
include/rpl/sync_to_replica.inc
RENAME TABLE t3 TO t3_bak;
UPDATE t1 SET b = 'XX' WHERE a = 1;
SELECT * FROM t1 ORDER BY a;
a	b
1	XX
SELECT * FROM t2 ORDER BY a;
a	b
1	YY
SELECT * FROM t3 ORDER BY a;
a	b
1	ZZ
call mtr.add_suppression("Replica SQL.*Table .test.t3. doesn.t exist.*, Error_code: MY-001146");
call mtr.add_suppression("The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state");
include/rpl/wait_for_applier_to_stop.inc
SHOW TABLES LIKE 't%';
Tables_in_test (t%)
t1
t2
t3_bak
SELECT * FROM t1 ORDER BY a;
a	b
1	AA_for_row_or_XX_for_stmt_mixed
SELECT * FROM t2 ORDER BY a;
a	b
1	AA_for_row_or_YY_for_stmt_mixed
include/rpl/stop_receiver.inc
RENAME TABLE t3_bak TO t3;
include/rpl/start_replica.inc
TRUNCATE t1;
TRUNCATE t2;
TRUNCATE t3;
include/rpl/sync_to_replica.inc

*** Test non-transactional group w/ PK ***
ALTER TABLE t1 ADD PRIMARY KEY (a);
ALTER TABLE t2 ADD PRIMARY KEY (a);
ALTER TABLE t3 ADD PRIMARY KEY (a);
include/rpl/sync_to_replica.inc
RENAME TABLE t3 TO t3_bak;
INSERT INTO t3 VALUES(2, 'B');
INSERT INTO t2 VALUES(2, 'B');
INSERT INTO t1 VALUES(2, 'B');
UPDATE t1 SET b = 'X' WHERE a = 2;
include/rpl/wait_for_applier_to_stop.inc
SELECT * FROM t1 ORDER BY a;
a	b
2	X
SELECT * FROM t2 ORDER BY a;
a	b
2	YY
SELECT * FROM t3 ORDER BY a;
a	b
2	ZZ
SHOW TABLES LIKE 't%';
Tables_in_test (t%)
t1
t2
t3_bak
SELECT * FROM t1 ORDER BY a;
a	b
SELECT * FROM t2 ORDER BY a;
a	b
include/rpl/stop_receiver.inc
RENAME TABLE t3_bak TO t3;
include/rpl/start_replica.inc
TRUNCATE t1;
TRUNCATE t2;
TRUNCATE t3;
include/rpl/sync_to_replica.inc

*** Test transactional group w/ PK ***
ALTER TABLE t1 ENGINE=InnoDB;
ALTER TABLE t2 ENGINE=InnoDB;
ALTER TABLE t3 ENGINE=InnoDB;
include/rpl/sync_to_replica.inc
RENAME TABLE t3 TO t3_bak;
BEGIN;
INSERT INTO t1 VALUES (3, 'C'), (4, 'D');
INSERT INTO t2 VALUES (3, 'C'), (4, 'D');
INSERT INTO t3 VALUES (3, 'C'), (4, 'D');
COMMIT;
include/rpl/wait_for_applier_to_stop.inc
SELECT * FROM t1 ORDER BY a;
a	b
3	C
4	D
SELECT * FROM t2 ORDER BY a;
a	b
3	C
4	D
SELECT * FROM t3 ORDER BY a;
a	b
3	C
4	D
SHOW TABLES LIKE 't%';
Tables_in_test (t%)
t1
t2
t3_bak
SELECT * FROM t1 ORDER BY a;
a	b
SELECT * FROM t2 ORDER BY a;
a	b
include/rpl/stop_receiver.inc
RENAME TABLE t3_bak TO t3;
include/rpl/start_replica.inc
*** Clean up ***
DROP TABLE t1,t2,t3;
include/rpl/sync_to_replica.inc
include/rpl/deinit.inc
