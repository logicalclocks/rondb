include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]

# 0. Check if a privilege checks user exists and adapt the test if so.
#    Create a test auxiliary include file to avoid step repetition.
[connection slave]

# 1.1. Set REQUIRE_TABLE_PRIMARY_KEY_CHECK to ON
#      Check the performance_schema table and applier metadata repository
#      are correct
STOP REPLICA;
START REPLICA;
SELECT REQUIRE_TABLE_PRIMARY_KEY_CHECK FROM mysql.slave_relay_log_info;
REQUIRE_TABLE_PRIMARY_KEY_CHECK
ON
include/assert.inc [Check mysql.slave_relay_log_info]
include/assert.inc [REQUIRE_TABLE_PRIMARY_KEY_CHECK for default channel "" in performance_schema.replication_applier_configuration is ON]

# 1.2. Set REQUIRE_TABLE_PRIMARY_KEY_CHECK to OFF
#      Check the performance_schema table and applier metadata repository
#      are correct
STOP REPLICA;
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = OFF;
START REPLICA;
SELECT REQUIRE_TABLE_PRIMARY_KEY_CHECK FROM mysql.slave_relay_log_info;
REQUIRE_TABLE_PRIMARY_KEY_CHECK
OFF
include/assert.inc [Check mysql.slave_relay_log_info]
include/assert.inc [REQUIRE_TABLE_PRIMARY_KEY_CHECK for default channel "" in performance_schema.replication_applier_configuration is OFF]

# 1.3. Set REQUIRE_TABLE_PRIMARY_KEY_CHECK to STREAM
#      Check the performance_schema table and applier metadata repository
#      are correct
STOP REPLICA;
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = STREAM;
START REPLICA;
SELECT REQUIRE_TABLE_PRIMARY_KEY_CHECK FROM mysql.slave_relay_log_info;
REQUIRE_TABLE_PRIMARY_KEY_CHECK
STREAM
include/assert.inc [Check mysql.slave_relay_log_info]
include/assert.inc [REQUIRE_TABLE_PRIMARY_KEY_CHECK for default channel "" in performance_schema.replication_applier_configuration is STREAM]

# 1.4. Set REQUIRE_TABLE_PRIMARY_KEY_CHECK to GENERATE
#      Check the performance_schema table and applier metadata repository
#      are correct
STOP REPLICA;
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = GENERATE;
START REPLICA;
SELECT REQUIRE_TABLE_PRIMARY_KEY_CHECK FROM mysql.slave_relay_log_info;
REQUIRE_TABLE_PRIMARY_KEY_CHECK
GENERATE
include/assert.inc [Check mysql.slave_relay_log_info]
include/assert.inc [REQUIRE_TABLE_PRIMARY_KEY_CHECK for default channel "" in performance_schema.replication_applier_configuration is GENERATE]
STOP REPLICA;

# 2.1 Upgrade the server while using Table repositories
#     Have 3 channels:
#       1. A channel with no privileged user (ch1)
#       2. A group_replication channel (group_replication_recovery)
#       3. A channel with a privileged user (default channel)
#     REQUIRE_TABLE_PRIMARY_KEY_CHECK is set to STREAM for all channels
include/rpl/set_gtid_mode.inc
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", SOURCE_PORT=12 FOR CHANNEL "ch1" ;
CHANGE REPLICATION SOURCE TO SOURCE_USER="root" FOR CHANNEL "group_replication_recovery";
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", SOURCE_PORT=12, PRIVILEGE_CHECKS_USER = 'root'@'localhost' FOR CHANNEL "";
ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Require_table_primary_key_check;
UPDATE mysql.slave_relay_log_info SET Number_of_lines = 11;
include/rpl/restart_server.inc [server_number=2 parameters: --skip_replica_start --upgrade=FORCE]
include/assert.inc [Check the number of channels with REQUIRE_TABLE_PRIMARY_KEY_CHECK set to STREAM]
include/assert.inc [Check that mysql.slave_relay_log_info entries all have REQUIRE_TABLE_PRIMARY_KEY_CHECK set to STREAM]
RESET REPLICA ALL FOR CHANNEL "ch1";
include/rpl/set_gtid_mode.inc

# 3. Error scenario: Test when the stored configuration for a GR channel is invalid
UPDATE mysql.slave_relay_log_info SET Require_table_primary_key_check='GENERATE' WHERE Channel_name="group_replication_recovery";
include/rpl/restart_server.inc [server_number=2 parameters: --skip_replica_start]
RESET REPLICA ALL FOR CHANNEL "group_replication_recovery";

# 4.1. Change REQUIRE_TABLE_PRIMARY_KEY_CHECK to ON
#      Execute a RESET REPLICA command.
#      The option should not be affected
#      It also survives a server restart
CHANGE REPLICATION SOURCE TO REQUIRE_TABLE_PRIMARY_KEY_CHECK = ON;
include/assert.inc [Check entry for default channel "" in mysql.slave_relay_log_info]
RESET REPLICA;
include/assert.inc [Check entry for default channel "" in mysql.slave_relay_log_info]
include/rpl/restart_server.inc [server_number=2 parameters: --skip_replica_start]
include/assert.inc [Check entry for default channel "" in mysql.slave_relay_log_info]

# 4.2. Execute a RESET REPLICA ALL command.
#      The table line was removed.
#      On recreation the value is STREAM for the default channel
RESET REPLICA ALL;
include/assert.inc [Check entry for default channel "" in mysql.slave_relay_log_info]
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost";
include/assert.inc [The default channel "" in mysql.slave_relay_log_info has the default value STREAM]

# 4.3. Make RESET REPLICA fail due to persistence issues
#      Check that errors on slave info persistence are gracefully handled
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", REQUIRE_TABLE_PRIMARY_KEY_CHECK = OFF FOR CHANNEL "";
include/assert.inc [Check entry for default channel "" in mysql.slave_relay_log_info]
SET @@GLOBAL.DEBUG = '+d,rpl_rli_clear_info_error';
RESET REPLICA;
ERROR HY000: Could not initialize connection metadata structure; more error messages can be found in the MySQL error log
include/assert.inc [Check entry for default channel "" is unchanged in mysql.slave_relay_log_info]

# 5. Cleanup
SET @@GLOBAL.DEBUG = '-d,rpl_rli_clear_info_error';
RESET REPLICA ALL;
CALL mtr.add_suppression("Error reading relay log configuration.");
CALL mtr.add_suppression("Replica: Failed to initialize the connection metadata structure for channel ''; its record may still be present in the applier metadata repository*");
CALL mtr.add_suppression("Failed to create or recover replication info repositories.");
CALL mtr.add_suppression("Replica SQL for channel '': Replica failed to initialize applier metadata structure from the repository,*");
CALL mtr.add_suppression("Replication configuration appears to be corrupted. On Group Replication channel 'group_replication_recovery'*");
CALL mtr.add_suppression("Replica: Failed to initialize the connection metadata structure for channel 'group_replication_recovery'*");
CALL mtr.add_suppression("Error writing relay log configuration.");
START REPLICA;
include/rpl/deinit.inc
