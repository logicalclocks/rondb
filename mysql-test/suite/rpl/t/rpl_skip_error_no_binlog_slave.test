#
# ==== Purpose ====
#
# This test checks if the Exec_Source_Log_Pos and the Read_Source_Log_Pos match
# after a statement with an error ignored by the slave.
#
# ==== Implementation ====
#
# Assert if Exec_Source_Log_Pos is the same as Read_Source_Log_Pos after three
# different scenarios using transactional tables:
#   1) DDL
#   2) DML with autocommit
#   3) DML inside a transaction
#
# ==== References ====
#
# BUG#22268777 BINLOGLESS SLAVE DOES NOT UPDATE EXEC_MASTER_LOG_POS
#              WITH REPLICA_SKIP_ERRORS

--source include/rpl/init_source_replica.inc

CREATE TABLE t1_trans (n INT NOT NULL PRIMARY KEY) ENGINE=INNODB;

--source include/rpl/sync_to_replica.inc

call mtr.add_suppression("You need to use --log-bin to make --binlog-format work.");

CREATE TABLE t2_trans (a INT) ENGINE=INNODB;
INSERT INTO t1_trans VALUES (1);
INSERT INTO t1_trans VALUES (2);

--source include/rpl/connection_source.inc
# error because table already exists in slave
CREATE TABLE t2_trans (a INT);

# the slave will not apply all master's gtids
--let $ignore_gtids_on_sync= 1
--source include/rpl/sync_to_replica.inc

--let $exec_source_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Source_Log_Pos, 1)
--let $read_source_log_pos= query_get_value(SHOW REPLICA STATUS, Read_Source_Log_Pos, 1)

--let $assert_text= Exec_Source_Log_Pos should be equal to Read_Source_Log_Pos after CREATE TABLE
--let $assert_cond= $exec_source_log_pos = $read_source_log_pos
--source include/assert.inc

--source include/rpl/connection_source.inc
# error because the value already exists in the table in the slave
INSERT INTO t1_trans VALUES (1);
--source include/rpl/sync_to_replica.inc

--let $exec_source_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Source_Log_Pos, 1)
--let $read_source_log_pos= query_get_value(SHOW REPLICA STATUS, Read_Source_Log_Pos, 1)

--let $assert_text= Exec_Source_Log_Pos should be equal to Read_Source_Log_Pos after INSERT
--let $assert_cond= $exec_source_log_pos = $read_source_log_pos
--source include/assert.inc

--source include/rpl/connection_source.inc
# error because the value already exists in the table in the slave
BEGIN;
INSERT INTO t1_trans VALUES (2);
COMMIT;
--source include/rpl/sync_to_replica.inc

--let $exec_source_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Source_Log_Pos, 1)
--let $read_source_log_pos= query_get_value(SHOW REPLICA STATUS, Read_Source_Log_Pos, 1)

--let $assert_text= Exec_Source_Log_Pos should be equal to Read_Source_Log_Pos after INSERT inside transaction
--let $assert_cond= $exec_source_log_pos = $read_source_log_pos
--source include/assert.inc

# cleanup
--source include/rpl/connection_source.inc
DROP TABLE t1_trans, t2_trans;
--source include/rpl/sync_to_replica.inc
--source include/rpl/connection_source.inc
--source include/rpl/deinit.inc
