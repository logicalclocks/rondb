################################################################################
# Bug#18338203 P_S REPLICATION_CONNECTION_STATUS.SOURCE_UUID UNINITIALIZED VALUE
#
# The Source_UUID field was introduced in mysql-5.6.0.
# When replicating from a pre-5.6.0 master to a 5.7 slave,
# the slave will ask for the Source_UUID field which the master doesnt have.
# Prior to fix, the P_S code made an assuption that if there is a master
# there will be a Source_UUID for the master which is not true in the case
# of say 5.5->5.7 replication. Since the P_S code blindly copied Source_UUID
# bytes from mi object, we ended up with a garbage value in the select
# SOURCE_UUID field from P_S.replication_connect_status
################################################################################
--source include/not_group_replication_plugin.inc
--source include/have_debug_sync.inc
# Testing it in one mode is enough
--source include/have_binlog_format_row.inc
--source include/rpl/init_source_replica.inc

--source include/rpl/connection_replica.inc
--source include/rpl/stop_replica.inc

--let $orig_master_uuid= query_get_value(select source_uuid from performance_schema.replication_connection_status, source_uuid, 1)

--echo #
--echo # Explicitly simulate a NULL Source_UUID return value i.e., fake as a pre-5.6 master.
--echo #

SET @save_debug= @@GLOBAL.debug;
SET GLOBAL debug= '+d,dbug.return_null_SOURCE_UUID';

--echo #
--echo # We should still have the Source_UUID value.
--echo #

--let $instrumented_master_uuid= query_get_value(select source_uuid from performance_schema.replication_connection_status, source_uuid, 1)

--let $assert_text= source_uuid field should be non-empty.
--let $assert_cond= "$instrumented_master_uuid" != ""
--source include/assert.inc

--let $instrumented_master_uuid=

--echo #
--echo # START REPLICA will return a NULL for Source_UUID now as per our debug behaviour.
--echo #

--source include/rpl/start_replica.inc

--echo #
--echo # We dont have a Source_UUID now, so should see an empty output as the Source_UUID value.
--echo #

--let $wait_condition=select source_uuid = "" from performance_schema.replication_connection_status
--source include/wait_condition.inc

--echo #
--echo # de-activate the debug behaviour.
--echo #

SET GLOBAL debug= '-d,dbug.return_null_SOURCE_UUID';
SET GLOBAL debug= @save_debug;

--echo #
--echo # After de-activating, the Source_UUID value should be there.
--echo #

--source include/rpl/stop_replica.inc
--source include/rpl/start_replica.inc

--echo #
--echo # Verify that we have the Source_UUID now.
--echo #

--let $wait_condition=select source_uuid = "$orig_master_uuid" from performance_schema.replication_connection_status
--source include/wait_condition.inc

--let $wait_condition=
--let $orig_master_uuid=
--source include/rpl/deinit.inc
