#
# Test that when all the slave options pertaining to slave files
# are set in an MSR set up.
# The test mainly tests slave config is properly set so that slave
# threads start and stop smoothly.
#

#Skip on group replication runs
--source include/not_group_replication_plugin.inc

--echo #
--echo # set up masters server_1 and server_3 with server_2 being a slave.
--echo #.
--let $rpl_topology= 1->2,3->2,4->2,5->2
--let $rpl_multi_source= 1
--let $rpl_skip_start_slave=1
--source include/rpl/init.inc

--echo #
--echo # On slave, issue start replica/stop replica command. Slave should not
--echo # error out anywhere.
--echo #
--let $rpl_connection_name= server_2
--source include/connection.inc

START REPLICA SQL_THREAD;
#check till sql_thread returned Yes
--let $rpl_source_file= include/rpl/wait_for_applier_to_start.inc
--source include/rpl/for_each_connection.inc

START REPLICA SQL_THREAD;
#check till sql_thread returned Yes
--let $rpl_source_file= include/rpl/wait_for_applier_to_start.inc
--source include/rpl/for_each_connection.inc

START REPLICA IO_THREAD;
#check till sql_thread returned Yes
--let $rpl_source_file= include/rpl/wait_for_receiver_to_start.inc
--source include/rpl/for_each_connection.inc

STOP REPLICA;
--let $rpl_source_file= include/rpl/wait_for_receiver_to_stop.inc
--source include/rpl/for_each_connection.inc
--let $rpl_source_file= include/rpl/wait_for_applier_to_stop.inc
--source include/rpl/for_each_connection.inc

START REPLICA;
--let $rpl_source_file= include/rpl/wait_for_receiver_to_start.inc
--source include/rpl/for_each_connection.inc
--let $rpl_source_file= include/rpl/wait_for_applier_to_start.inc
--source include/rpl/for_each_connection.inc

--let $rpl_skip_sync=1
--source include/rpl/deinit.inc
