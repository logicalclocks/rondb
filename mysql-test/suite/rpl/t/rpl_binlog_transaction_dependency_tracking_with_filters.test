################################################################################
# ==== Purpose ====
# Test that filtered transaction resets commit_parent since it doesn't generate
# any writesets.
#
# ==== Implementation ====
# 1. Add empty transactions on source.
# 2. Test timestamps order with filtered and non-filtered transactions on replica.
# a) No filtering: DDL and DMLs on 'test' database are not filtered.
# b) Empty transactions from master.
# c) Filtering (modified transactions): DDLs and DMLs due to rerwite rule
#    'db1->db2'.
# d) Filtering (empty transactions): DDLs and DMLs on 'nodb' database.
# 3. Clean up.
#
# ==== References ====
# WL#9556: Writeset-based MTS dependency tracking on master
################################################################################

--source include/rpl/init_source_replica.inc
--source include/have_binlog_format_row.inc
--source include/not_replica_parallel_workers.inc

--source include/rpl/connection_replica.inc
# Set filter rule.
--source include/rpl/stop_replica.inc
CHANGE REPLICATION FILTER REPLICATE_REWRITE_DB=((db1,db2)),
                   REPLICATE_IGNORE_DB=(nodb);
--source include/rpl/start_replica.inc
# Take backup of variables.
SET @save_replica_parallel_workers = @@GLOBAL.replica_parallel_workers;
# Set variables.
SET GLOBAL replica_parallel_workers = 0;

--source include/rpl/connection_source.inc
--echo #
--echo # 1. Add empty transactions on source.
--echo #
CREATE DATABASE nodb; # 0 1
CREATE DATABASE db1;  # 1 2
CREATE DATABASE db2;  # 2 3
USE nodb; CREATE TABLE nodbt1 (a INT PRIMARY KEY NOT NULL AUTO_INCREMENT); # 3 4
USE db1;  CREATE TABLE db1t1 (a INT PRIMARY KEY NOT NULL AUTO_INCREMENT);  # 4 5
USE test; CREATE TABLE t1 (a INT PRIMARY KEY NOT NULL AUTO_INCREMENT);     # 5 6

USE db1;
INSERT INTO db1t1 VALUES (NULL); # 6 7
INSERT INTO db1t1 VALUES (NULL); # 6 8
INSERT INTO db1t1 VALUES (NULL); # 6 9
INSERT INTO db1t1 VALUES (NULL); # 6 10
USE nodb;
INSERT INTO nodbt1 VALUES (NULL); # 6 11
INSERT INTO nodbt1 VALUES (NULL); # 6 12
INSERT INTO nodbt1 VALUES (NULL); # 6 13
INSERT INTO nodbt1 VALUES (NULL); # 6 14
USE test;
INSERT INTO t1 VALUES (NULL); # 6 15
INSERT INTO t1 VALUES (NULL); # 6 16
INSERT INTO t1 VALUES (NULL); # 6 17
INSERT INTO t1 VALUES (NULL); # 6 18

DROP DATABASE nodb; # 18 19
DROP DATABASE db1;  # 19 20
DROP DATABASE db2;  # 20 21
DROP TABLE test.t1; # 21 22

if ( `SELECT @@GLOBAL.GTID_MODE = "ON"` )
{
  --disable_query_log
  SET @@SESSION.GTID_NEXT = 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa:1';
  COMMIT; # 22 23
  --let $server1_uuid= `SELECT @@GLOBAL.SERVER_UUID`
  eval SET @@SESSION.GTID_NEXT = '$server1_uuid:23';
  COMMIT; # 22 24
  SET @@SESSION.GTID_NEXT = 'AUTOMATIC';
  --enable_query_log
}

--let $binlog_file= query_get_value(SHOW BINARY LOG STATUS, File, 1)
--let $dont_print_logical_timestamps= 1
--let $logical_timestamps=0 1;1 2;2 3;3 4;4 5;5 6;6 7;6 8;6 9;6 10;6 11;6 12;6 13;6 14;6 15;6 16;6 17;6 18;18 19;19 20;20 21;21 22
if ( `SELECT @@GLOBAL.GTID_MODE = "ON"` )
{
--let $logical_timestamps=0 1;1 2;2 3;3 4;4 5;5 6;6 7;6 8;6 9;6 10;6 11;6 12;6 13;6 14;6 15;6 16;6 17;6 18;18 19;19 20;20 21;21 22;22 23;22 24
}
--source include/rpl/assert_logical_timestamps.inc


--echo #
--echo # 2. Test timestamps order with filtered and non-filtered transactions on replica.
--echo #
--source include/rpl/sync_to_replica.inc
--echo [On Replica]
--echo ######## 2.1. WRITESET with REPLICA ########
--source include/rpl/start_replica.inc
--connection master
--source include/rpl/sync_to_replica.inc
--let $binlog_file= query_get_value(SHOW BINARY LOG STATUS, File, 1)
--let $dont_print_logical_timestamps= 1
--let $logical_timestamps=0 1;1 2;2 3;3 4;4 5;4 6;4 7;4 8;4 9;4 10;4 11;4 12;12 13;13 14;14 15
if ( `SELECT @@GLOBAL.GTID_MODE = "ON"` )
{
 --let $logical_timestamps=0 1;1 2;2 3;3 4;4 5;5 6;6 7;6 8;6 9;6 10;6 11;6 12;6 13;6 14;6 15;6 16;6 17;6 18;6 19;19 20;20 21;21 22;22 23;22 24
}
--source include/rpl/assert_logical_timestamps.inc


--echo
--echo # 3. Clean up.
--source include/rpl/connection_source.inc

--source include/rpl/sync_to_replica.inc
--echo [On Replica]
--let $dont_print_logical_timestamps=
SET @@GLOBAL.replica_parallel_workers = @save_replica_parallel_workers;

--source include/rpl/stop_replica.inc
CHANGE REPLICATION FILTER REPLICATE_REWRITE_DB=(), REPLICATE_IGNORE_DB=();
--source include/rpl/start_replica.inc

--source include/rpl/deinit.inc
