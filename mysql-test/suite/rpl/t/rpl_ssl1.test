--source include/not_group_replication_plugin.inc
source include/rpl/init_source_replica.inc;

# We don't test all types of ssl auth params here since it's a bit hard 
# until problems with OpenSSL 0.9.7 are unresolved

# creating replication user for whom ssl auth is required
# preparing playground
connection master;
SET SQL_LOG_BIN= 0;
create user replssl@localhost require ssl;
grant replication slave on *.* to replssl@localhost;
SET SQL_LOG_BIN= 1;
create table t1 (t int);

--source include/rpl/sync_to_replica.inc

#trying to use this user without ssl
STOP REPLICA;
--source include/rpl/wait_for_replica_to_stop.inc
--replace_column 2 ####
CHANGE REPLICATION SOURCE to SOURCE_USER='replssl',SOURCE_PASSWORD='';
START REPLICA;

#showing that replication don't work
--let $slave_io_errno= convert_error(ER_ACCESS_DENIED_ERROR)
--source include/rpl/wait_for_receiver_error.inc
--source include/rpl/stop_applier.inc

#showing that replication could work with ssl params
--replace_result $MYSQL_TEST_DIR MYSQL_TEST_DIR
--replace_column 2 ####
eval CHANGE REPLICATION SOURCE to SOURCE_SSL=1 , SOURCE_SSL_CA ='$MYSQL_TEST_DIR/std_data/cacert.pem', SOURCE_SSL_CERT='$MYSQL_TEST_DIR/std_data/client-cert.pem', SOURCE_SSL_KEY='$MYSQL_TEST_DIR/std_data/client-key.pem', SOURCE_TLS_VERSION='TLSv1.2';
START REPLICA;
--source include/rpl/wait_for_replica_to_start.inc

#avoiding unneeded sleeps
connection master;
insert into t1 values (1);
--source include/rpl/sync_to_replica.inc

#checking that replication is ok
select * from t1;

#checking show replica status
let $status_items= Source_SSL_Allowed, Source_SSL_CA_Path, Source_SSL_CA_File, Source_SSL_Cert, Source_SSL_Key, Source_TLS_Version;
source include/rpl/deprecated/show_replica_status.inc;
source include/rpl/assert_replica_running.inc;

#checking if replication works without ssl also performing clean up
STOP REPLICA;
--source include/rpl/wait_for_replica_to_stop.inc
--replace_column 2 ####
CHANGE REPLICATION SOURCE to SOURCE_USER='root',SOURCE_PASSWORD='', SOURCE_SSL=0;
START REPLICA;
--source include/rpl/wait_for_replica_to_start.inc
connection master;
SET SQL_LOG_BIN= 0;
drop user replssl@localhost;
SET SQL_LOG_BIN= 1;
drop table t1;

--source include/rpl/sync_to_replica.inc
source include/rpl/deprecated/show_replica_status.inc;
source include/rpl/assert_replica_running.inc;
# End of 4.1 tests

# Start replication with ssl_verify_server_cert turned on
connection slave;
STOP REPLICA;
--source include/rpl/wait_for_replica_to_stop.inc
--replace_result $MYSQL_TEST_DIR MYSQL_TEST_DIR
--replace_column 2 ####
eval CHANGE REPLICATION SOURCE to
 SOURCE_HOST="localhost",
 SOURCE_SSL=1 ,
 SOURCE_SSL_CA ='$MYSQL_TEST_DIR/std_data/cacert.pem',
 SOURCE_SSL_CERT='$MYSQL_TEST_DIR/std_data/client-cert.pem',
 SOURCE_SSL_KEY='$MYSQL_TEST_DIR/std_data/client-key.pem',
 SOURCE_SSL_VERIFY_SERVER_CERT=1;
START REPLICA;
--source include/rpl/wait_for_replica_to_start.inc

connection master;
create table t1 (t int);
insert into t1 values (1);

--source include/rpl/sync_to_replica.inc

echo on slave;
#checking that replication is ok
select * from t1;

#checking show replica status
source include/rpl/deprecated/show_replica_status.inc;
--source include/rpl/assert_replica_running.inc

# ==== Clean up ====

connection master;
drop table t1;
--source include/rpl/sync_to_replica.inc

###############################################################################
# BUG#18778485 SSL_VERIFY_SERVER_CERT AUTOMATICALLY SETS TO NO POST RESET SLAVE
#              COMMAND
#
# Due to the buggy behaviour, a RESET REPLICA command on the slave server
# reset ssl_verify_server_cert= 0. RESET REPLICA is generally expected to
# delete slave logs and forget the replicaiton positions. This erroneous
# behavior was therefore counterintuitive.
#
# We test the following:
# - The behaviour of ssl_verify_server_cert with RESET REPLICA.
# - Test that neither of STOP REPLICA or START REPLICA affects the value of
#   ssl_verify_server_cert.
# - Test that CHANGE REPLICATION SOURCE with no ssl_verify_server_cert option doesnt
#   affect ssl_verify_server_cert value.
##############################################################################

--source include/rpl/stop_replica.inc

--let $assert_cond= "[SHOW REPLICA STATUS, Source_SSL_Verify_Server_Cert, 1]" = "Yes"
--let $assert_text= Source_SSL_Verify_Server_Cert should NOT change on STOP REPLICA.
--source include/assert.inc

--let $log_file= query_get_value(SHOW REPLICA STATUS, Source_Log_File, 1)
--let $log_pos= query_get_value(SHOW REPLICA STATUS, Read_Source_Log_Pos, 1)

RESET REPLICA;

--let $assert_cond= "[SHOW REPLICA STATUS, Source_SSL_Verify_Server_Cert, 1]" = "Yes"
--let $assert_text= Source_SSL_Verify_Server_Cert should NOT change on RESET REPLICA.
--source include/assert.inc

--replace_result $MASTER_MYPORT MASTER_MYPORT
--eval CHANGE REPLICATION SOURCE TO SOURCE_PORT= $MASTER_MYPORT

--let $assert_cond= "[SHOW REPLICA STATUS, Source_SSL_Verify_Server_Cert, 1]" = "Yes"
--let $assert_text= Source_SSL_Verify_Server_Cert should NOT change on CHANGE REPLICATION SOURCE.
--source include/assert.inc

--source include/rpl/start_replica.inc
--let $assert_cond= "[SHOW REPLICA STATUS, Source_SSL_Verify_Server_Cert, 1]" = "Yes"
--let $assert_text= Source_SSL_Verify_Server_Cert should NOT change on START REPLICA.
--source include/assert.inc

--connection master
--disable_warnings
DROP TABLE IF EXISTS t1;
--source include/rpl/sync_to_replica.inc
--enable_warnings

--source include/rpl/stop_replica.inc
# Clean change replication source options.
--replace_column 2 ####
CHANGE REPLICATION SOURCE TO
 SOURCE_HOST="127.0.0.1",
 SOURCE_SSL_CA ='',
 SOURCE_SSL_CERT='',
 SOURCE_SSL_KEY='',
 SOURCE_SSL_VERIFY_SERVER_CERT=0,
 SOURCE_SSL=0,
 SOURCE_TLS_VERSION='';

--let $rpl_only_running_threads= 1
--source include/rpl/deinit.inc
