###############################################################################
# Check that replication will fail safely if we inappropriately change
# replication tables. Besides we check if some maintenance commands
# can run without a problem.
###############################################################################

--source include/not_group_replication_plugin.inc
--source include/no_valgrind_without_big.inc
--source include/not_replica_parallel_workers.inc
--source include/rpl/init_source_replica.inc
--connection slave
--source include/rpl/stop_replica.inc
SHOW CREATE TABLE mysql.slave_relay_log_info;
ALTER TABLE mysql.slave_relay_log_info ENGINE= Innodb;
SHOW CREATE TABLE mysql.slave_relay_log_info;
--let $saved_sync_master= `SELECT @@global.sync_source_info`
SET @@global.sync_source_info= 1;
--source include/rpl/start_replica.inc

--connection master
CREATE TABLE t_innodb (id INTEGER) engine= Innodb;

--connection slave
call mtr.add_suppression("Error writing relay log configuration.");
call mtr.add_suppression("Column count of mysql.slave_relay_log_info is wrong.");
call mtr.add_suppression("Error running query, replica SQL thread aborted.");
call mtr.add_suppression("Info table is not ready to be used.");
call mtr.add_suppression("Error writing source configuration.");
call mtr.add_suppression("Failed to flush connection metadata.");
call mtr.add_suppression(" Error while checking replication metadata.");
call mtr.add_suppression("Failed to create or recover replication info repository.");
call mtr.add_suppression("Error creating.*: Error checking repositories");
call mtr.add_suppression("Failed to create or recover replication info repositories.");
call mtr.add_suppression("An unexpected event sequence was detected by the IO thread");
call mtr.add_suppression("GTID_LOG_EVENT.* is not expected in an event stream");
call mtr.add_suppression("Failed to initialize the connection metadata structure for channel ''");

###############################################################################
#           Checking if replication can fail safely (SQL Thread)
###############################################################################
#
# The test executes the following steps:
#  1 - Changes mysql.slave_relay_log_info and SQL Thread stops gracefully.
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#

#
#  1 - Changes mysql.slave_relay_log_info and SQL Thread stops gracefully.
#
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--source include/rpl/sync_to_replica.inc
ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Number_of_workers;
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection slave
# ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 1805
--let $slave_sql_errno= 1805
--let $show_slave_sql_error= 1
--source include/rpl/wait_for_applier_error.inc
--source include/rpl/stop_receiver.inc

#
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-source-info=1
--source include/rpl/restart_server.inc
--connection slave
--error ER_REPLICA_CONFIGURATION
START REPLICA SQL_THREAD;
ALTER TABLE mysql.slave_relay_log_info ADD COLUMN Number_of_workers INTEGER UNSIGNED AFTER Sql_delay;
UPDATE mysql.slave_relay_log_info SET Number_of_workers= 0;

#
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-source-info=1
--source include/rpl/restart_server.inc
--connection slave
--source include/rpl/start_replica.inc

#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--source include/rpl/sync_to_replica.inc
ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Number_of_workers;
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection slave
# ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 1805
--let $slave_sql_errno= 1805
--let $show_slave_sql_error= 1
--source include/rpl/wait_for_applier_error.inc
--source include/rpl/stop_receiver.inc
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
START REPLICA SQL_THREAD;

--let $_slave_source_host= query_get_value(SHOW REPLICA STATUS, Source_Host, 1)
--let $_slave_source_user= query_get_value(SHOW REPLICA STATUS, Source_User, 1)
--let $_slave_source_port= query_get_value(SHOW REPLICA STATUS, Source_Port, 1)
--let $_slave_source_log_file= query_get_value(SHOW REPLICA STATUS, Relay_Source_Log_File, 1)
--let $_slave_source_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Source_Log_Pos, 1)
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
RESET REPLICA ALL;
--replace_result $_slave_source_host SOURCE_HOST $_slave_source_user SOURCE_USER $_slave_source_port SOURCE_PORT $_slave_source_log_file SOURCE_LOG_FILE $_slave_source_log_pos SOURCE_LOG_POS
--replace_column 2 ####
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST= '$_slave_source_host', SOURCE_USER= '$_slave_source_user', SOURCE_PORT= $_slave_source_port, SOURCE_LOG_FILE= '$_slave_source_log_file', SOURCE_LOG_POS= $_slave_source_log_pos
ALTER TABLE mysql.slave_relay_log_info ADD COLUMN Number_of_workers INTEGER UNSIGNED AFTER Sql_delay;
UPDATE mysql.slave_relay_log_info SET Number_of_workers= 0;
RESET REPLICA ALL;
--replace_result $_slave_source_host SOURCE_HOST $_slave_source_user SOURCE_USER $_slave_source_port SOURCE_PORT $_slave_source_log_file SOURCE_LOG_FILE $_slave_source_log_pos SOURCE_LOG_POS
--replace_column 2 ####
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST= '$_slave_source_host', SOURCE_USER= '$_slave_source_user', SOURCE_PORT= $_slave_source_port, SOURCE_LOG_FILE= '$_slave_source_log_file', SOURCE_LOG_POS= $_slave_source_log_pos
--source include/rpl/start_replica.inc
--connection master
--source include/rpl/sync_to_replica.inc

###############################################################################
#          Checking if replication can fail safely (I/O Thread)
###############################################################################
#
# The test executes the following steps:
#  1 - Changes mysql.slave_master_info and SQL Thread stops gracefully.
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#

#
#  1 - Changes mysql.slave_master_info and SQL Thread stops gracefully.
#
--connection slave
ALTER TABLE mysql.slave_master_info DROP COLUMN Enabled_auto_position;
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection slave
# ER_REPLICA_FATAL_ERROR
--let $slave_io_errno= 13117
--let $show_slave_io_error= 1
--source include/rpl/wait_for_receiver_error.inc
--source include/rpl/stop_applier.inc

#
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-source-info=1
--source include/rpl/restart_server.inc
--connection slave
--error ER_REPLICA_CONFIGURATION
START REPLICA SQL_THREAD;
ALTER TABLE mysql.slave_master_info ADD COLUMN Enabled_auto_position BOOLEAN NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the master.' AFTER Ssl_crlpath;
UPDATE mysql.slave_master_info SET Enabled_auto_position= 0;

#
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-source-info=1
--source include/rpl/restart_server.inc
--connection slave

--source include/rpl/start_replica.inc

#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#
--connection slave
ALTER TABLE mysql.slave_master_info DROP COLUMN Enabled_auto_position;
--connection master
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection slave
# ER_REPLICA_FATAL_ERROR
--let $slave_io_errno= 13117
--let $show_slave_io_error= 1
--source include/rpl/wait_for_receiver_error.inc
--source include/rpl/stop_applier.inc
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
START REPLICA SQL_THREAD;

--let $_slave_source_host= query_get_value(SHOW REPLICA STATUS, Source_Host, 1)
--let $_slave_source_user= query_get_value(SHOW REPLICA STATUS, Source_User, 1)
--let $_slave_source_port= query_get_value(SHOW REPLICA STATUS, Source_Port, 1)
--let $_slave_source_log_file= query_get_value(SHOW REPLICA STATUS, Relay_Source_Log_File, 1)
--let $_slave_source_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Source_Log_Pos, 1)
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
RESET REPLICA ALL;
--replace_result $_slave_source_host SOURCE_HOST $_slave_source_user SOURCE_USER $_slave_source_port SOURCE_PORT $_slave_source_log_file SOURCE_LOG_FILE $_slave_source_log_pos SOURCE_LOG_POS
--replace_column 2 ####
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST= '$_slave_source_host', SOURCE_USER= '$_slave_source_user', SOURCE_PORT= $_slave_source_port, SOURCE_LOG_FILE= '$_slave_source_log_file', SOURCE_LOG_POS= $_slave_source_log_pos
ALTER TABLE mysql.slave_master_info ADD COLUMN Enabled_auto_position BOOLEAN NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the master.' AFTER Ssl_crlpath;
UPDATE mysql.slave_master_info SET Enabled_auto_position= 0;
RESET REPLICA ALL;
--replace_result $_slave_source_host SOURCE_HOST $_slave_source_user SOURCE_USER $_slave_source_port SOURCE_PORT $_slave_source_log_file SOURCE_LOG_FILE $_slave_source_log_pos SOURCE_LOG_POS
--replace_column 2 ####
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST= '$_slave_source_host', SOURCE_USER= '$_slave_source_user', SOURCE_PORT= $_slave_source_port, SOURCE_LOG_FILE= '$_slave_source_log_file', SOURCE_LOG_POS= $_slave_source_log_pos
--source include/rpl/start_replica.inc
--connection master
--source include/rpl/sync_to_replica.inc

###############################################################################
# Checking ANALYZE TABLE, CHECK TABLE, CHECKSUM TABLE, OPTIMIZE TABLE,
#          REPAIR TABLE, SHOW CREATE TABLE and MYSQLDUMP
###############################################################################

#
# Check ANALYZE TABLE, CHECK TABLE and CHECKSUM TABLE
#
ANALYZE TABLE mysql.slave_master_info, mysql.slave_relay_log_info;
CHECK TABLE mysql.slave_master_info, mysql.slave_relay_log_info EXTENDED;

#
# Check OPTIMIZE TABLE and REPAIR TABLE
#
OPTIMIZE TABLE mysql.slave_master_info, mysql.slave_relay_log_info;
REPAIR TABLE mysql.slave_master_info, mysql.slave_relay_log_info EXTENDED;

#
# Check SHOW CREATE TABLE
#
SHOW CREATE TABLE mysql.slave_master_info;
SHOW CREATE TABLE mysql.slave_relay_log_info;

#
# Check MYSQLDUMP
#
--echo # Search for occurrences of slave_master_info in the output from mysqldump
--let $MYSQLD_DATADIR= `select @@datadir`
--exec $MYSQL_DUMP mysql slave_master_info slave_relay_log_info > $MYSQLTEST_VARDIR/tmp/accessing_repository.sql
--let OUTF=$MYSQLTEST_VARDIR/tmp/accessing_repository.sql
perl;
  use strict;
  my $outf= $ENV{'OUTF'} or die "OUTF not set";
  open(FILE, "$outf") or die("Unable to open $outf: $!\n");
  my $count = () = grep(/CREATE TABLE IF NOT EXISTS `slave_master_info`/gi,<FILE>);
  print "- Occurrences: $count\n";
  close(FILE);
EOF
--remove_file $MYSQLTEST_VARDIR/tmp/accessing_repository.sql

###############################################################################
# Cleaning up
###############################################################################
--connection master
DROP TABLE t_innodb;
--source include/rpl/sync_to_replica.inc
--disable_query_log
--eval SET @@global.sync_source_info=$saved_sync_master
--enable_query_log

--source include/rpl/deinit.inc
