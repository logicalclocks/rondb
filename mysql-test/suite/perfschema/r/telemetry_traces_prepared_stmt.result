# SETUP
INSTALL COMPONENT 'file://component_query_attributes';
INSTALL COMPONENT 'file://component_test_server_telemetry_traces';

# Operation
# Test #1: prepared statement with query attributes
SELECT test_component_trace_log('***** TEST - Prepared statement with query attrs only:');
SELECT SQRT(4) AS square_root;
square_root
2
# Test #2: prepared statement with bind parameters

# CLEANUP
UNINSTALL COMPONENT 'file://component_test_server_telemetry_traces';
UNINSTALL COMPONENT 'file://component_query_attributes';

# Component logs:
test_server_telemetry_traces_component_init init:
 - UDFs registered.
 - System variables registered.
 - Status variables registered.
 - Telemetry per-session data slot registered.
 - Telemetry session callbacks registered.
 - Telemetry statement callbacks registered.
End of init
 tm_session_create: telemetry session started, increase refcount by user=root to 1
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
***** TEST - Prepared statement with query attrs only:
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494393"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
 tm_session_connect: client session started (user=root)
 tm_session_create: telemetry session started, increase refcount by user=root to 2
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='set autocommit=1')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='CREATE DATABASE IF NOT EXISTS client_test_db')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='USE client_test_db')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='SELECT (support = 'YES' or support = 'DEFAULT' or support = 'ENABLED') AS `TRUE` FROM information_schema.engines WHERE engine = 'innodb'')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='SELECT test_component_trace_log('***** TEST - Prepared statement with bind params only:')')
***** TEST - Prepared statement with bind params only:
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 query_attrs_to_json: failed to create query attribute iterator
 query_attr_read: failed to find query attribute 'trace'
 > tm_stmt_notify_qa: skip tracing, no attribute 'trace' (depth=1, with_qa=1, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='SELECT test_component_trace_log('***** TEST - Prepared statement with both bind params and query attrs:')')
***** TEST - Prepared statement with both bind params and query attrs:
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 query_attrs_to_json: failed to create query attribute iterator
 query_attr_read: failed to find query attribute 'trace'
 > tm_stmt_notify_qa: skip tracing, no attribute 'trace' (depth=1, with_qa=1, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
> tm_stmt_notify_qa: all query attributes [{"trace": "on", "traceparent": "1329494394"}]
> tm_stmt_notify_qa: proceed further (depth=1, with_qa=1, user=root, query='', app[], call[])
> tm_stmt_end: trace statement (depth=1, user=root, query='', query1='', digest='(null)', app[], call[])
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=client_test_db, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='DROP DATABASE IF EXISTS client_test_db')
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='')
 tm_session_disconnect: client session ended (user=root)
 tm_session_destroy: telemetry session ended, decrease refcount to 1
 tm_session_destroy: failed to get current THD
> tm_stmt_start: proceed further (depth=1, user=root, host=localhost, db=test, query='')
 > tm_stmt_notify_qa: skip tracing, no qa (depth=1, with_qa=0, user=root, query='UNINSTALL COMPONENT 'file://component_test_server_telemetry_traces'')
test_server_telemetry_traces_component_deinit:
 - Telemetry statement callbacks unregistered.
 tm_session_destroy: telemetry session ended, decrease refcount to 0
 - Current session aborted.
 - Done waiting for telemetry sessions to finish (refcount = 0).
 - Telemetry session callbacks unregistered.
 - Telemetry per-session data slot unregistered.
 - Status variables unregistered.
 - System variables unregistered.
 - UDFs unregistered.
End of deinit
