############################################################################
# Bug #17650326  MYSQLBINLOG PRINTS INVALID SQL FROM RELAY LOGS WHEN GTID IS
# ENABLED
# Problem: Replaying a relaylog which ends with GTID_LOG_EVENT causes error
# "ERROR 1790 (HY000) @@SESSION.GTID_NEXT cannot be changed by a client that
# owns a GTID. The client owns <UUID:GNO>. Ownership is released on COMMIT
# or ROLLBACK."
#
# Steps to reproduce:
#  1) Stop IO thread after reading gtid_log_event (relaylog 1 contains
#      GTID_LOG_EVENT at the end)
#  2) Restart IO thread which rotates relaylog file (relaylog 2)
#  3) Replay relaylog1's 'mysqlbinlog' output against 'mysql' client tool,
#     it should not cause any problems.
#  4) Replay (relaylog1 + relaylog2)'s 'mysqlbinlog' output against
#     'mysql' client tool, it should not cause any problems.
#
############################################################################
--source include/have_debug.inc
--source include/have_binlog_format_row.inc
--source include/rpl/init_source_replica.inc

# Initial setup
CREATE TABLE t1(i INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
--source include/rpl/sync_to_replica.inc
--let MYSQLD_DATADIR=`select @@datadir`
SET @save_debug=@@global.debug;

# Step 1: Stop I/O thread after reading GTID_LOG_EVENT
# This will leave the relaylog in incomplete state(i.e., it ends
# with GTID_LOG_EVENT)
SET GLOBAL DEBUG='+d,stop_io_after_reading_gtid_log_event';

--source include/rpl/connection_source.inc
INSERT INTO t1 VALUES (2);

--source include/rpl/connection_replica.inc
--source include/rpl/wait_for_receiver_to_stop.inc
--let $relay_file1 = query_get_value( SHOW REPLICA STATUS, Relay_Log_File, 1 )

--let $auto_pos = query_get_value( SHOW REPLICA STATUS, Auto_Position, 1 )
--let $assert_text= Slave SOURCE_AUTO_POSITION should be enabled for this test
--let $assert_cond= $auto_pos= 1
--source include/assert.inc

# Step 2: Restart I/O thread and execute the pending INSERT(2)
SET GLOBAL DEBUG= @save_debug;
--source include/rpl/start_replica.inc

--source include/rpl/connection_source.inc
--source include/rpl/sync_to_replica.inc
--let $relay_file2 = query_get_value( SHOW REPLICA STATUS, Relay_Log_File, 1 )

# Step 3: Replay the incomplete Relaylog's mysqlbinlog output against mysql and see that
# there are no issues.
DROP TABLE t1;
RESET BINARY LOGS AND GTIDS;
--exec $MYSQL_BINLOG --force-if-open $MYSQLD_DATADIR/$relay_file1 | $MYSQL -uroot -S$SLAVE_MYSOCK -P$SLAVE_MYPORT

--let $assert_text= Check that there is one tuple in the table
--let $assert_cond= [SELECT COUNT(*) AS Val FROM t1 where i=1, Val, 1] = 1
--source include/assert.inc

# Step 4: Concat two relay logs and then replay mysqlbinlog ouput against mysql and see
# that there are no issues.
DROP TABLE t1;
RESET BINARY LOGS AND GTIDS;
--exec $MYSQL_BINLOG --force-if-open $MYSQLD_DATADIR/$relay_file1 $MYSQLD_DATADIR/$relay_file2 | $MYSQL -uroot -S$SLAVE_MYSOCK -P$SLAVE_MYPORT

--let $assert_text= Check that there are two tuples in the table
--let $assert_cond= [SELECT COUNT(*) AS Val FROM t1 where i=1 or i=2, Val, 1] = 2
--source include/assert.inc

# Cleanup
--source include/rpl/connection_source.inc
DROP TABLE t1;
--source include/rpl/deinit.inc
