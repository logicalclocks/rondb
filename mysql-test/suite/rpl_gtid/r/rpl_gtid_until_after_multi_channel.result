#
# set up source server_1 and server_3 with server_2 being a replica.
#.
include/rpl/init.inc [topology=1->2,3->2]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server_1]
CREATE TABLE t1 (c1 int primary key);
[connection server_3]
CREATE TABLE t3 (c1 int primary key);
[connection server_2]

##############################################################
# 1. REPLICATE ALL SOURCE DATA
[connection server_1]
INSERT INTO t1 VALUES(2);
INSERT INTO t1 VALUES(3);
INSERT INTO t1 VALUES(4);
[connection server_3]
INSERT INTO t3 VALUES(2);
INSERT INTO t3 VALUES(3);
INSERT INTO t3 VALUES(4);
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-4,SOURCE_3_UUID:1-4" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-4,SOURCE_3_UUID:1-4" for channel 'channel_3';
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [3 rows in t1 must be replicated now]
include/assert.inc [3 rows in t3 must be replicated now]

##############################################################
# 2. DATA IS ALREADY PRESENT
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-2,SOURCE_3_UUID:1-2" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-2,SOURCE_3_UUID:1-2" for channel 'channel_3';
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [3 rows in t1 must be replicated now]
include/assert.inc [3 rows in t3 must be replicated now]

##############################################################
# 3. REPLICATE SUBSET OF SOURCE DATA WAITING ON A SINGLE GTID
[connection server_1]
INSERT INTO t1 VALUES(5);
INSERT INTO t1 VALUES(6);
INSERT INTO t1 VALUES(7);
INSERT INTO t1 VALUES(8);
[connection server_3]
INSERT INTO t3 VALUES(5);
INSERT INTO t3 VALUES(6);
INSERT INTO t3 VALUES(7);
INSERT INTO t3 VALUES(8);
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:7,SOURCE_3_UUID:7" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:7,SOURCE_3_UUID:7" for channel 'channel_3';
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [Atleast 6 rows in t1 must be replicated now]
include/assert.inc [Atleast 6 rows in t3 must be replicated now]

##############################################################
# 4. REPLICATE SUBSET OF SOURCE DATA WAITING WITH ALREADY KNOWN GTIDS
[connection server_1]
INSERT INTO t1 VALUES(9);
[connection server_3]
INSERT INTO t3 VALUES(9);
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-8,SOURCE_3_UUID:1-8" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-8,SOURCE_3_UUID:1-8" for channel 'channel_3';
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [Atleast 7 rows in t1 must be replicated now]
include/assert.inc [Atleast 7 rows in t3 must be replicated now]

##############################################################
# 5. REPLICATE SOURCE DATA WAITING WITH ALREADY KNOWN GTIDS
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-10,SOURCE_3_UUID:1-10" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-10,SOURCE_3_UUID:1-10" for channel 'channel_3';
[connection server_1]
INSERT INTO t1 VALUES(10);
[connection server_3]
INSERT INTO t3 VALUES(10);
[connection server_2]
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [9 rows in t1 must be replicated now]
include/assert.inc [9 rows in t3 must be replicated now]

##############################################################
# 6. REPLICATE MISSING SOURCE DATA WAITING WITH SINGLE GTID
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:11,SOURCE_3_UUID:11" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:11,SOURCE_3_UUID:11" for channel 'channel_3';
[connection server_1]
INSERT INTO t1 VALUES(11);
[connection server_3]
INSERT INTO t3 VALUES(11);
[connection server_2]
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [10 rows in t1 must be replicated now]
include/assert.inc [10 rows in t3 must be replicated now]

##############################################################
# 7. REPLICATE UUID NOT PRESENT WITH DATA INCOMING
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-20" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:1-20" for channel 'channel_3';
[connection server_1]
INSERT INTO t1 VALUES(12);
INSERT INTO t1 VALUES(13);
INSERT INTO t1 VALUES(14);
INSERT INTO t1 VALUES(15);
[connection server_2]
include/rpl/assert_replica_running.inc [FOR CHANNEL 'channel_1']
include/rpl/assert_replica_running.inc [FOR CHANNEL 'channel_3']
[connection server_1]
INSERT INTO t1 VALUES(16);
INSERT INTO t1 VALUES(17);
INSERT INTO t1 VALUES(18);
INSERT INTO t1 VALUES(19);
INSERT INTO t1 VALUES(20);
[connection server_2]
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_3_UUID:1-20" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_3_UUID:1-20" for channel 'channel_3';
[connection server_3]
INSERT INTO t3 VALUES(12);
INSERT INTO t3 VALUES(13);
INSERT INTO t3 VALUES(14);
INSERT INTO t3 VALUES(15);
INSERT INTO t3 VALUES(16);
INSERT INTO t3 VALUES(17);
INSERT INTO t3 VALUES(18);
INSERT INTO t3 VALUES(19);
INSERT INTO t3 VALUES(20);
[connection server_2]
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/assert.inc [19 rows in t1 must be replicated now]
include/assert.inc [19 rows in t1 must be replicated now]

##############################################################
# 8. Cleanup
[connection server_1]
DROP TABLE t1;
[connection server_3]
DROP TABLE t3;
[connection server_2]
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_1_UUID:21" for channel 'channel_1';
START REPLICA SQL_THREAD, IO_THREAD UNTIL SQL_AFTER_GTIDS="SOURCE_3_UUID:21" for channel 'channel_3';
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_1']
include/rpl/wait_for_applier_to_stop.inc [FOR CHANNEL 'channel_3']
include/rpl/deinit.inc
RESET REPLICA ALL FOR CHANNEL 'channel_1';
RESET REPLICA ALL FOR CHANNEL 'channel_3';
