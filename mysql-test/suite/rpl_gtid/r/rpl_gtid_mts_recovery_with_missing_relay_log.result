include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]
#
# 0. Create helper files for restarting the server with gaps
[connection slave]
include/suppress_messages.inc
# Connection 2 suppresses message <Recovery from source pos .* and file .* for channel ''*>.
# Connection 2 suppresses message <Error looking for file after .*slave-relay-bin.000007.*>.
# Connection 2 suppresses message <Replica: Failed to initialize the connection metadata structure for channel .* its record may still be present in*>.
# Connection 2 suppresses message <Failed to create or recover replication info repositories.*>.
# Connection 2 suppresses message <Replica SQL for channel .* Replica failed to initialize applier metadata structure from the repository, Error_code*>.
#
# 1. Check the replica can start after a restart that leaves gaps on the relay log
#    and relay log recovery is not used
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_begin.inc
[connection slave]
include/rpl/stop_replica.inc
SET @@GLOBAL.replica_parallel_workers=2;
SET @@GLOBAL.replica_preserve_commit_order=OFF;
include/rpl/start_replica.inc
[connection master]
CREATE DATABASE d1;
CREATE DATABASE d2;
CREATE TABLE d1.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
CREATE TABLE d2.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
FLUSH LOGS;
INSERT INTO d1.t VALUES (1, 'T1');
include/rpl/sync_to_replica.inc
BEGIN;
INSERT INTO d2.t VALUES (2, 'Slave local');
[connection master1]
BEGIN;
INSERT INTO d1.t VALUES (2, 'T4');
[connection master]
INSERT INTO d2.t VALUES (1, 'T2');
INSERT INTO d2.t VALUES (2, 'T3');
[connection master1]
COMMIT;
[connection slave1]
include/rpl/stop_server.inc [server_number=2]
[connection slave]
include/rpl/start_server.inc [server_number=2 parameters: --skip_replica_start=1 --sync_source_info=1 --relay-log-recovery=0 --gtid_mode=ON --enforce-gtid-consistency --log-replica-updates]
include/rpl/start_replica.inc
[connection master]
include/rpl/sync_to_replica.inc
include/diff_tables.inc [master:d2.t, slave:d2.t]
include/diff_tables.inc [master:d1.t, slave:d1.t]
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_end.inc
[connection master]
DROP DATABASE d1;
DROP DATABASE d2;
include/rpl/sync_to_replica.inc
include/rpl/reset.inc
#
# 2. Check the replica can start after a restart that leaves gaps on the relay log
#    and relay log recovery is used
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_begin.inc
[connection slave]
include/rpl/stop_replica.inc
SET @@GLOBAL.replica_parallel_workers=2;
SET @@GLOBAL.replica_preserve_commit_order=OFF;
include/rpl/start_replica.inc
[connection master]
CREATE DATABASE d1;
CREATE DATABASE d2;
CREATE TABLE d1.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
CREATE TABLE d2.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
FLUSH LOGS;
INSERT INTO d1.t VALUES (1, 'T1');
include/rpl/sync_to_replica.inc
BEGIN;
INSERT INTO d2.t VALUES (2, 'Slave local');
[connection master1]
BEGIN;
INSERT INTO d1.t VALUES (2, 'T4');
[connection master]
INSERT INTO d2.t VALUES (1, 'T2');
INSERT INTO d2.t VALUES (2, 'T3');
[connection master1]
COMMIT;
[connection slave1]
include/rpl/stop_server.inc [server_number=2]
[connection slave]
include/rpl/start_server.inc [server_number=2 parameters: --skip_replica_start=1 --sync_source_info=1 --relay-log-recovery=1 --gtid_mode=ON --enforce-gtid-consistency --log-replica-updates]
include/rpl/start_replica.inc
[connection master]
include/rpl/sync_to_replica.inc
include/diff_tables.inc [master:d2.t, slave:d2.t]
include/diff_tables.inc [master:d1.t, slave:d1.t]
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_end.inc
[connection master]
DROP DATABASE d1;
DROP DATABASE d2;
include/rpl/sync_to_replica.inc
include/rpl/reset.inc
#
# 3. Check the replica can't start after a restart that leaves gaps on the relay log
#    if GTID_MODE != ON even with relay log recovery
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_begin.inc
[connection slave]
include/rpl/stop_replica.inc
SET @@GLOBAL.replica_parallel_workers=2;
SET @@GLOBAL.replica_preserve_commit_order=OFF;
include/rpl/start_replica.inc
[connection master]
CREATE DATABASE d1;
CREATE DATABASE d2;
CREATE TABLE d1.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
CREATE TABLE d2.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
FLUSH LOGS;
INSERT INTO d1.t VALUES (1, 'T1');
include/rpl/sync_to_replica.inc
BEGIN;
INSERT INTO d2.t VALUES (2, 'Slave local');
[connection master1]
BEGIN;
INSERT INTO d1.t VALUES (2, 'T4');
[connection master]
INSERT INTO d2.t VALUES (1, 'T2');
INSERT INTO d2.t VALUES (2, 'T3');
[connection master1]
COMMIT;
[connection slave1]
include/rpl/stop_server.inc [server_number=2]
[connection slave]
include/rpl/start_server.inc [server_number=2 parameters: --skip_replica_start=1 --sync_source_info=1 --relay-log-recovery=1 --gtid_mode=ON_PERMISSIVE --enforce-gtid-consistency --log-replica-updates]
START REPLICA;
ERROR HY000: Replica failed to initialize applier metadata structure from the repository
include/rpl/restart_server.inc [server_number=2 parameters: --skip_replica_start=1 --sync_source_info=1 --relay-log-recovery=1 --gtid_mode=ON --enforce-gtid-consistency --log-replica-updates]
include/rpl/start_replica.inc
[connection master]
include/rpl/sync_to_replica.inc
include/diff_tables.inc [master:d2.t, slave:d2.t]
include/diff_tables.inc [master:d1.t, slave:d1.t]
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_end.inc
[connection master]
DROP DATABASE d1;
DROP DATABASE d2;
include/rpl/sync_to_replica.inc
include/rpl/reset.inc
#
# 4. Even if gaps exist, using  START REPLICA UNTIL SQL_AFTER_MTS_GAPS will throw
#    an warning stating that gaps were not calculated.
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_begin.inc
[connection slave]
include/rpl/stop_replica.inc
SET @@GLOBAL.replica_parallel_workers=2;
SET @@GLOBAL.replica_preserve_commit_order=OFF;
include/rpl/start_replica.inc
[connection master]
CREATE DATABASE d1;
CREATE DATABASE d2;
CREATE TABLE d1.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
CREATE TABLE d2.t (a INT PRIMARY KEY, name TEXT) ENGINE=INNODB;
FLUSH LOGS;
INSERT INTO d1.t VALUES (1, 'T1');
include/rpl/sync_to_replica.inc
BEGIN;
INSERT INTO d2.t VALUES (2, 'Slave local');
[connection master1]
BEGIN;
INSERT INTO d1.t VALUES (2, 'T4');
[connection master]
INSERT INTO d2.t VALUES (1, 'T2');
INSERT INTO d2.t VALUES (2, 'T3');
[connection master1]
COMMIT;
[connection slave1]
include/rpl/stop_server.inc [server_number=2]
[connection slave]
include/rpl/start_server.inc [server_number=2 parameters: --skip_replica_start=1 --sync_source_info=1 --relay-log-recovery=0 --gtid_mode=ON --enforce-gtid-consistency --log-replica-updates]
START REPLICA UNTIL SQL_AFTER_MTS_GAPS;
Warnings:
Warning	4047	The until clause SQL_AFTER_MTS_GAPS is being used for channel '' when GTID_MODE = ON and SOURCE_AUTO_POSITION=1 meaning the server did not compute internally what gaps may exist in the relay log transaction execution. To close any execution gaps use either the SQL_BEFORE_GTIDS or SQL_AFTER_GTIDS until clause.
include/rpl/wait_for_applier_to_stop.inc
include/rpl/stop_receiver.inc
include/rpl/start_replica.inc
[connection master]
include/rpl/sync_to_replica.inc
include/diff_tables.inc [master:d2.t, slave:d2.t]
include/diff_tables.inc [master:d1.t, slave:d1.t]
# Sourcing common/rpl/generate_mta_gap_with_missing_relaylog_end.inc
[connection master]
DROP DATABASE d1;
DROP DATABASE d2;
include/rpl/sync_to_replica.inc
include/rpl/reset.inc
#
# 5. Cleanup
include/rpl/deinit.inc
