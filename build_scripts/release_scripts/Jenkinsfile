pipeline {
    agent any 
    parameters{
      choice(name: 'BRANCH', choices: ['21.04', '22.10'], description: 'RonDB branch to build.')
      choice(name: 'BUILD_CORES', choices: ['8', '1', '16', '24', '32', '48'],  description: 'No of build threads. This is passed to make -j. Note jenkins machine is shared with other build process.')
      booleanParam(name: 'RELEASE_BUILD', defaultValue: true, description: 'Enable this for release build. It uses PGO (profile guided optimization) and it take ~ 3 hrs to build')
    }
    environment {
        HopsCECeds = credentials('HopsCE')
        HopsEECeds = credentials('HopsEE')
        RepoCeds = credentials('RepoHW')
    }

    stages {
        stage("check docker") {
            steps {

              sh '''
                echo "Checking docker "  
                docker ps 
              '''

            }
        }
        stage("Checkout RonDB") {
            steps {

              sh '''
                echo "Cloning RonDB Branch ${BRANCH}"  
                cd ${WORKSPACE}
                git clone --depth=1 --branch ${BRANCH} https://github.com/logicalclocks/rondb
              '''
            }
        }
        stage("build") {
            steps {
              sh '''
                echo "Building RonDB"
                cd ${WORKSPACE}/rondb

                source ./MYSQL_VERSION
                RONDB_VERSION="$MYSQL_VERSION_MAJOR.$MYSQL_VERSION_MINOR.$MYSQL_VERSION_PATCH"

                DEPLOY_SCRIPT="./build_scripts/release_scripts/deploy.sh"
                sed -i "s/___CE_USER___/$HopsCECeds_USR/g" $DEPLOY_SCRIPT
                sed -i "s/___CE_PASS___/$HopsCECeds_PSW/g" $DEPLOY_SCRIPT
                sed -i "s/___EE_USER___/$HopsEECeds_USR/g" $DEPLOY_SCRIPT
                sed -i "s/___EE_PASS___/$HopsEECeds_PSW/g" $DEPLOY_SCRIPT

                # Source code will be mounted into Docker build with root:root as owner,
                # regardless of what user is running this script.
                cat $RepoCeds > id_rsa
                chmod 600 id_rsa

                RELEASE_ARG=
                if [ "$RELEASE_BUILD" = true ]; then
                  RELEASE_ARG="--build-arg RELEASE_TARBALL=1"
                fi

                export DOCKER_CLI_EXPERIMENTAL=enabled
                export BUILDKIT_PROGRESS=plain
                docker buildx build . \
                  -f Dockerfile.oraclelinux7 \
                  --tag rondb-build-all:$RONDB_VERSION \
                  --target build-all \
                  --no-cache \
                  --build-arg BUILD_THREADS=$BUILD_CORES \
                  --build-arg DEPLOY_TO_REPO=1 \
                  $RELEASE_ARG
              '''
            }
        }
    }   

    post {
        always {

          sh '''
            echo "Cleaning workspace"
            rm -rf ${WORKSPACE}/rondb
            docker kill $(docker ps | grep rondb_build | cut  -d ' ' -f 1) | true
          '''

        }
    }
}

