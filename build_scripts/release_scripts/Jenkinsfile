pipeline {
    agent {
        node {
            label 'Local'
        }
    }
    parameters{
      string(name: 'BRANCH', defaultValue: '22.10.1', description: 'RonDB branch to build.')
      choice(name: 'BUILD_CORES', choices: ['16', '1', '8', '24', '32'],  description: 'No of build threads. This is passed to make -j. Note jenkins machine is shared with other build process.')
      booleanParam(name: 'RELEASE_BUILD', defaultValue: true, description: 'Enable this for release build. It uses PGO (profile guided optimization) and it take ~ 3 hrs to build')
      booleanParam(name: 'RELEASE_FINAL_CLUSTERJ', defaultValue: false, description: "By default clusterj jar is uploaded as a 'SNAPSHOT' version. Enable this parameter to release final JARs")
      booleanParam(name: 'IS_PUBLIC_RELEASE', defaultValue: true, description: 'Public releases are copied to /master and non public releases are copied to /dev on the repo server.')
    }
    environment {
        HopsCECeds = credentials('HopsCE')
        HopsEECeds = credentials('HopsEE')
        RepoCeds = credentials('RepoHW')
    }

    stages {
        stage("check docker") {
            steps {

              sh '''
                echo "Checking docker "  
                docker ps 
              '''

            }
        }
        stage("Checkout RonDB") {
            steps {

              sh '''
                echo "Cloning RonDB Branch ${BRANCH}"  
                cd ${WORKSPACE}
                git clone --depth=1 --branch ${BRANCH} https://github.com/logicalclocks/rondb
              '''
            }
        }
        stage("build") {
            steps {
              sh '''
                echo "Building RonDB"
                cd ${WORKSPACE}/rondb

                source ./MYSQL_VERSION
                RONDB_VERSION="$MYSQL_VERSION_MAJOR.$MYSQL_VERSION_MINOR.$MYSQL_VERSION_PATCH"

                DEPLOY_SCRIPT="./build_scripts/release_scripts/deploy.sh"
                sed -i "s/___CE_USER___/$HopsCECeds_USR/g" $DEPLOY_SCRIPT
                sed -i "s/___CE_PASS___/$HopsCECeds_PSW/g" $DEPLOY_SCRIPT
                sed -i "s/___EE_USER___/$HopsEECeds_USR/g" $DEPLOY_SCRIPT
                sed -i "s/___EE_PASS___/$HopsEECeds_PSW/g" $DEPLOY_SCRIPT

                # Source code will be mounted into Docker build with root:root as owner,
                # regardless of what user is running this script.
                cat $RepoCeds > id_rsa
                chmod 600 id_rsa

                RELEASE_TARBALL_ARG=
                if [ "$RELEASE_BUILD" = true ]; then
                  RELEASE_TARBALL_ARG="--build-arg RELEASE_TARBALL=1"
                fi

                RELEASE_FINAL_CLUSTERJ_ARG=
                if [ "$RELEASE_FINAL_CLUSTERJ" = true ]; then
                  RELEASE_FINAL_CLUSTERJ_ARG="--build-arg RELEASE_FINAL_CLUSTERJ=1"
                fi

                IS_PUBLIC_RELEASE_ARG=
                if [ "$IS_PUBLIC_RELEASE" = true ]; then
                  IS_PUBLIC_RELEASE_ARG="--build-arg IS_PUBLIC_RELEASE=1"
                fi

                DOCKER_FILE_NAME="Dockerfile.oraclelinux7"
                if [ "$BRANCH" = "22.10.1" ]; then
                  DOCKER_FILE_NAME="Dockerfile.oraclelinux8"
                fi

                export DOCKER_CLI_EXPERIMENTAL=enabled
                export BUILDKIT_PROGRESS=plain
                docker buildx build . \
                  -f $DOCKER_FILE_NAME \
                  --tag rondb-build-all:$RONDB_VERSION \
                  --target build-all \
                  --no-cache \
                  --build-arg BUILD_THREADS=$BUILD_CORES \
                  --build-arg DEPLOY_TO_REPO=1 \
                  $RELEASE_TARBALL_ARG \
                  $RELEASE_FINAL_CLUSTERJ_ARG \
                  $IS_PUBLIC_RELEASE_ARG
              '''
            }
        }
        stage("Build RDRS Image") {
            steps {

              sh '''

                echo "Building RDRS Image"

                cd ${WORKSPACE}/rondb
                source ./MYSQL_VERSION
                RONDB_VERSION="$MYSQL_VERSION_MAJOR.$MYSQL_VERSION_MINOR.$MYSQL_VERSION_PATCH"

                DOCKER_FILE_NAME="Dockerfile.oraclelinux7"
                if [ "$BRANCH" = "22.10.1" ]; then
                  DOCKER_FILE_NAME="Dockerfile.oraclelinux8"
                fi

                 DOCKER_BUILDKIT=1 docker buildx build . \
                 -f $DOCKER_FILE_NAME \
                 --tag rdrs:$RONDB_VERSION \
                 --target rdrs \
                 --build-arg BUILD_THREADS=$BUILD_CORES 
                 
                 RDRS_IMAGE_TAR_FILE="docker-image-rdrs-$RONDB_VERSION.tar.gz"
                 RDRS_IMAGE_TAR_FILE_REMOTE_DST="repo@repo.hops.works:/opt/repository/master/$RDRS_IMAGE_TAR_FILE"
                 docker save  rdrs:$RONDB_VERSION | gzip > $RDRS_IMAGE_TAR_FILE
                 echo "Copying: $RDRS_IMAGE_TAR_FILE to $RDRS_IMAGE_TAR_FILE_REMOTE_DST"
                 scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./id_rsa $RDRS_IMAGE_TAR_FILE $RDRS_IMAGE_TAR_FILE_REMOTE_DST

              '''
            }
        }

    }   

    post {
        always {

          sh '''
            echo "Cleaning workspace"
            rm -rf ${WORKSPACE}/rondb
            docker kill $(docker ps | grep rondb_build | cut  -d ' ' -f 1) | true
          '''

        }
    }
}

